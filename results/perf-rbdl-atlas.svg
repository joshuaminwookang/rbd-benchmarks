<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="678" onload="init(evt)" viewBox="0 0 1200 678" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="678.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="661" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="661" > </text>
<g id="frames">
<g >
<title>search_binary_handler (89 samples, 0.04%)</title><rect x="13.7" y="517" width="0.5" height="15.0" fill="rgb(231,141,0)" rx="2" ry="2" />
<text  x="16.73" y="527.5" ></text>
</g>
<g >
<title>__GI___libc_open (36 samples, 0.02%)</title><rect x="15.2" y="581" width="0.2" height="15.0" fill="rgb(236,128,11)" rx="2" ry="2" />
<text  x="18.22" y="591.5" ></text>
</g>
<g >
<title>__x64_sys_openat (29 samples, 0.01%)</title><rect x="15.3" y="533" width="0.1" height="15.0" fill="rgb(251,58,49)" rx="2" ry="2" />
<text  x="18.26" y="543.5" ></text>
</g>
<g >
<title>[unknown] (522 samples, 0.22%)</title><rect x="11.1" y="597" width="2.6" height="15.0" fill="rgb(209,113,43)" rx="2" ry="2" />
<text  x="14.09" y="607.5" ></text>
</g>
<g >
<title>main (169 samples, 0.07%)</title><rect x="1137.3" y="565" width="0.9" height="15.0" fill="rgb(205,67,37)" rx="2" ry="2" />
<text  x="1140.34" y="575.5" ></text>
</g>
<g >
<title>__x64_sys_execve (89 samples, 0.04%)</title><rect x="13.7" y="549" width="0.5" height="15.0" fill="rgb(251,41,28)" rx="2" ry="2" />
<text  x="16.73" y="559.5" ></text>
</g>
<g >
<title>exit_mmap (89 samples, 0.04%)</title><rect x="13.7" y="453" width="0.5" height="15.0" fill="rgb(208,182,19)" rx="2" ry="2" />
<text  x="16.73" y="463.5" ></text>
</g>
<g >
<title>rest_init (49,624 samples, 21.34%)</title><rect x="643.1" y="517" width="251.8" height="15.0" fill="rgb(217,224,11)" rx="2" ry="2" />
<text  x="646.14" y="527.5" >rest_init</text>
</g>
<g >
<title>free@plt (35 samples, 0.02%)</title><rect x="1042.9" y="565" width="0.2" height="15.0" fill="rgb(245,31,10)" rx="2" ry="2" />
<text  x="1045.91" y="575.5" ></text>
</g>
<g >
<title>__sincos (138 samples, 0.06%)</title><rect x="1134.9" y="565" width="0.7" height="15.0" fill="rgb(241,117,38)" rx="2" ry="2" />
<text  x="1137.89" y="575.5" ></text>
</g>
<g >
<title>copy_page_range (52 samples, 0.02%)</title><rect x="12.7" y="53" width="0.3" height="15.0" fill="rgb(226,141,31)" rx="2" ry="2" />
<text  x="15.72" y="63.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (245 samples, 0.11%)</title><rect x="1041.7" y="565" width="1.2" height="15.0" fill="rgb(212,105,28)" rx="2" ry="2" />
<text  x="1044.67" y="575.5" ></text>
</g>
<g >
<title>secondary_startup_64 (173,010 samples, 74.39%)</title><rect x="17.1" y="597" width="877.8" height="15.0" fill="rgb(238,192,10)" rx="2" ry="2" />
<text  x="20.08" y="607.5" >secondary_startup_64</text>
</g>
<g >
<title>RigidBodyDynamics::jcalc (88 samples, 0.04%)</title><rect x="959.0" y="597" width="0.5" height="15.0" fill="rgb(211,59,35)" rx="2" ry="2" />
<text  x="962.01" y="607.5" ></text>
</g>
<g >
<title>proc_single_show (38 samples, 0.02%)</title><rect x="16.2" y="469" width="0.2" height="15.0" fill="rgb(248,223,54)" rx="2" ry="2" />
<text  x="19.22" y="479.5" ></text>
</g>
<g >
<title>__sincos (2,161 samples, 0.93%)</title><rect x="1152.7" y="597" width="10.9" height="15.0" fill="rgb(230,120,50)" rx="2" ry="2" />
<text  x="1155.65" y="607.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (61 samples, 0.03%)</title><rect x="12.7" y="149" width="0.3" height="15.0" fill="rgb(232,207,27)" rx="2" ry="2" />
<text  x="15.69" y="159.5" ></text>
</g>
<g >
<title>CSVRow::readNextRow (37 samples, 0.02%)</title><rect x="1137.7" y="533" width="0.2" height="15.0" fill="rgb(211,59,36)" rx="2" ry="2" />
<text  x="1140.72" y="543.5" ></text>
</g>
<g >
<title>__sincos (72 samples, 0.03%)</title><rect x="1138.5" y="581" width="0.4" height="15.0" fill="rgb(217,17,13)" rx="2" ry="2" />
<text  x="1141.49" y="591.5" ></text>
</g>
<g >
<title>do_idle (123,386 samples, 53.06%)</title><rect x="17.1" y="549" width="626.0" height="15.0" fill="rgb(236,198,8)" rx="2" ry="2" />
<text  x="20.08" y="559.5" >do_idle</text>
</g>
<g >
<title>Builtins_JSRunMicrotasksEntry (86 samples, 0.04%)</title><rect x="12.6" y="389" width="0.4" height="15.0" fill="rgb(214,65,46)" rx="2" ry="2" />
<text  x="15.61" y="399.5" ></text>
</g>
<g >
<title>native_safe_halt (123,359 samples, 53.04%)</title><rect x="17.1" y="485" width="625.9" height="15.0" fill="rgb(253,225,22)" rx="2" ry="2" />
<text  x="20.10" y="495.5" >native_safe_halt</text>
</g>
<g >
<title>Builtins_JSRunMicrotasksEntry (104 samples, 0.04%)</title><rect x="11.8" y="373" width="0.5" height="15.0" fill="rgb(253,133,26)" rx="2" ry="2" />
<text  x="14.80" y="383.5" ></text>
</g>
<g >
<title>[perf-745.map] (72 samples, 0.03%)</title><rect x="11.9" y="245" width="0.3" height="15.0" fill="rgb(252,68,8)" rx="2" ry="2" />
<text  x="14.88" y="255.5" ></text>
</g>
<g >
<title>finish_task_switch (22 samples, 0.01%)</title><rect x="643.0" y="501" width="0.1" height="15.0" fill="rgb(215,202,27)" rx="2" ry="2" />
<text  x="646.03" y="511.5" ></text>
</g>
<g >
<title>Builtins_ArgumentsAdaptorTrampoline (76 samples, 0.03%)</title><rect x="12.7" y="277" width="0.3" height="15.0" fill="rgb(213,77,30)" rx="2" ry="2" />
<text  x="15.65" y="287.5" ></text>
</g>
<g >
<title>node::InternalCallbackScope::~InternalCallbackScope (87 samples, 0.04%)</title><rect x="12.6" y="453" width="0.4" height="15.0" fill="rgb(245,217,8)" rx="2" ry="2" />
<text  x="15.61" y="463.5" ></text>
</g>
<g >
<title>operator new[]@plt (110 samples, 0.05%)</title><rect x="1151.1" y="581" width="0.6" height="15.0" fill="rgb(210,91,31)" rx="2" ry="2" />
<text  x="1154.14" y="591.5" ></text>
</g>
<g >
<title>Builtins_AsyncFunctionAwaitResolveClosure (85 samples, 0.04%)</title><rect x="12.6" y="341" width="0.4" height="15.0" fill="rgb(212,197,21)" rx="2" ry="2" />
<text  x="15.61" y="351.5" ></text>
</g>
<g >
<title>operator new@plt (158 samples, 0.07%)</title><rect x="1149.3" y="581" width="0.8" height="15.0" fill="rgb(208,15,2)" rx="2" ry="2" />
<text  x="1152.35" y="591.5" ></text>
</g>
<g >
<title>operator delete[] (130 samples, 0.06%)</title><rect x="1188.4" y="597" width="0.7" height="15.0" fill="rgb(244,1,7)" rx="2" ry="2" />
<text  x="1191.42" y="607.5" ></text>
</g>
<g >
<title>Builtins_InterpreterEntryTrampoline (76 samples, 0.03%)</title><rect x="12.7" y="309" width="0.3" height="15.0" fill="rgb(236,151,25)" rx="2" ry="2" />
<text  x="15.65" y="319.5" ></text>
</g>
<g >
<title>Builtins_InterpreterEntryTrampoline (77 samples, 0.03%)</title><rect x="11.9" y="293" width="0.3" height="15.0" fill="rgb(215,190,19)" rx="2" ry="2" />
<text  x="14.85" y="303.5" ></text>
</g>
<g >
<title>Builtins_AsyncFunctionAwaitResolveClosure (104 samples, 0.04%)</title><rect x="11.8" y="325" width="0.5" height="15.0" fill="rgb(251,212,11)" rx="2" ry="2" />
<text  x="14.80" y="335.5" ></text>
</g>
<g >
<title>load_elf_binary (89 samples, 0.04%)</title><rect x="13.7" y="501" width="0.5" height="15.0" fill="rgb(217,143,13)" rx="2" ry="2" />
<text  x="16.73" y="511.5" ></text>
</g>
<g >
<title>vfs_read (41 samples, 0.02%)</title><rect x="16.2" y="517" width="0.2" height="15.0" fill="rgb(240,93,8)" rx="2" ry="2" />
<text  x="19.21" y="527.5" ></text>
</g>
<g >
<title>do_sys_open (29 samples, 0.01%)</title><rect x="15.3" y="517" width="0.1" height="15.0" fill="rgb(230,194,7)" rx="2" ry="2" />
<text  x="18.26" y="527.5" ></text>
</g>
<g >
<title>copy_page_range (52 samples, 0.02%)</title><rect x="11.9" y="37" width="0.3" height="15.0" fill="rgb(207,34,26)" rx="2" ry="2" />
<text  x="14.93" y="47.5" ></text>
</g>
<g >
<title>operator delete[]@plt (76 samples, 0.03%)</title><rect x="1189.1" y="597" width="0.4" height="15.0" fill="rgb(218,105,45)" rx="2" ry="2" />
<text  x="1192.08" y="607.5" ></text>
</g>
<g >
<title>SimpleMath::Fixed::Matrix&lt;double, 3u, 3u&gt;::inverse (283 samples, 0.12%)</title><rect x="1052.0" y="581" width="1.4" height="15.0" fill="rgb(217,167,23)" rx="2" ry="2" />
<text  x="1055.00" y="591.5" ></text>
</g>
<g >
<title>SimpleMath::ColPivHouseholderQR&lt;SimpleMath::Fixed::Matrix&lt;double, 3u, 3u&gt; &gt;::compute (1,803 samples, 0.78%)</title><rect x="1034.5" y="581" width="9.2" height="15.0" fill="rgb(236,3,39)" rx="2" ry="2" />
<text  x="1037.51" y="591.5" ></text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::Invoke (86 samples, 0.04%)</title><rect x="12.6" y="405" width="0.4" height="15.0" fill="rgb(249,145,13)" rx="2" ry="2" />
<text  x="15.61" y="415.5" ></text>
</g>
<g >
<title>tcp_seq_next (35 samples, 0.02%)</title><rect x="11.2" y="437" width="0.2" height="15.0" fill="rgb(217,18,41)" rx="2" ry="2" />
<text  x="14.18" y="447.5" ></text>
</g>
<g >
<title>[unknown] (35 samples, 0.02%)</title><rect x="16.5" y="597" width="0.2" height="15.0" fill="rgb(216,74,25)" rx="2" ry="2" />
<text  x="19.49" y="607.5" ></text>
</g>
<g >
<title>__vfs_write (39 samples, 0.02%)</title><rect x="13.3" y="485" width="0.2" height="15.0" fill="rgb(252,68,20)" rx="2" ry="2" />
<text  x="16.30" y="495.5" ></text>
</g>
<g >
<title>node::fs::FileHandle::ClosePromise (87 samples, 0.04%)</title><rect x="12.6" y="469" width="0.4" height="15.0" fill="rgb(224,139,37)" rx="2" ry="2" />
<text  x="15.61" y="479.5" ></text>
</g>
<g >
<title>Builtins_ArgumentsAdaptorTrampoline (72 samples, 0.03%)</title><rect x="11.9" y="261" width="0.3" height="15.0" fill="rgb(227,102,4)" rx="2" ry="2" />
<text  x="14.88" y="271.5" ></text>
</g>
<g >
<title>copy_process (60 samples, 0.03%)</title><rect x="11.9" y="69" width="0.3" height="15.0" fill="rgb(248,114,21)" rx="2" ry="2" />
<text  x="14.90" y="79.5" ></text>
</g>
<g >
<title>do_idle (49,624 samples, 21.34%)</title><rect x="643.1" y="485" width="251.8" height="15.0" fill="rgb(215,93,39)" rx="2" ry="2" />
<text  x="646.14" y="495.5" >do_idle</text>
</g>
<g >
<title>x86_64_start_kernel (49,624 samples, 21.34%)</title><rect x="643.1" y="581" width="251.8" height="15.0" fill="rgb(238,128,18)" rx="2" ry="2" />
<text  x="646.14" y="591.5" >x86_64_start_kernel</text>
</g>
<g >
<title>__libc_read (77 samples, 0.03%)</title><rect x="11.1" y="581" width="0.4" height="15.0" fill="rgb(218,174,48)" rx="2" ry="2" />
<text  x="14.12" y="591.5" ></text>
</g>
<g >
<title>SimpleMath::Block&lt;SimpleMath::Dynamic::Matrix&lt;double&gt;, double&gt;::operator=&lt;SimpleMath::Fixed::Matrix&lt;double, 3u, 1u&gt; &gt; (316 samples, 0.14%)</title><rect x="1020.7" y="581" width="1.6" height="15.0" fill="rgb(242,216,1)" rx="2" ry="2" />
<text  x="1023.68" y="591.5" ></text>
</g>
<g >
<title>unmap_single_vma (62 samples, 0.03%)</title><rect x="13.9" y="421" width="0.3" height="15.0" fill="rgb(232,178,44)" rx="2" ry="2" />
<text  x="16.87" y="431.5" ></text>
</g>
<g >
<title>RigidBodyDynamics::Math::SpatialTransform::toMatrix (599 samples, 0.26%)</title><rect x="1007.1" y="581" width="3.0" height="15.0" fill="rgb(239,159,23)" rx="2" ry="2" />
<text  x="1010.06" y="591.5" ></text>
</g>
<g >
<title>[perf-745.map] (75 samples, 0.03%)</title><rect x="12.7" y="245" width="0.3" height="15.0" fill="rgb(217,135,24)" rx="2" ry="2" />
<text  x="15.66" y="255.5" ></text>
</g>
<g >
<title>__schedule (23 samples, 0.01%)</title><rect x="643.0" y="517" width="0.1" height="15.0" fill="rgb(228,135,27)" rx="2" ry="2" />
<text  x="646.02" y="527.5" ></text>
</g>
<g >
<title>[unknown] (136 samples, 0.06%)</title><rect x="15.0" y="597" width="0.7" height="15.0" fill="rgb(212,202,48)" rx="2" ry="2" />
<text  x="18.02" y="607.5" ></text>
</g>
<g >
<title>[perf-745.map] (71 samples, 0.03%)</title><rect x="11.9" y="229" width="0.3" height="15.0" fill="rgb(247,89,6)" rx="2" ry="2" />
<text  x="14.88" y="239.5" ></text>
</g>
<g >
<title>__xstat64 (24 samples, 0.01%)</title><rect x="15.9" y="597" width="0.1" height="15.0" fill="rgb(249,58,24)" rx="2" ry="2" />
<text  x="18.91" y="607.5" ></text>
</g>
<g >
<title>RigidBodyDynamics::CompositeRigidBodyAlgorithm (415 samples, 0.18%)</title><rect x="895.0" y="597" width="2.1" height="15.0" fill="rgb(216,216,53)" rx="2" ry="2" />
<text  x="898.01" y="607.5" ></text>
</g>
<g >
<title>arch_cpu_idle (123,360 samples, 53.04%)</title><rect x="17.1" y="517" width="625.9" height="15.0" fill="rgb(220,157,35)" rx="2" ry="2" />
<text  x="20.10" y="527.5" >arch_cpu_idle</text>
</g>
<g >
<title>__GI___printf_fp_l (39 samples, 0.02%)</title><rect x="1152.2" y="597" width="0.2" height="15.0" fill="rgb(214,146,28)" rx="2" ry="2" />
<text  x="1155.19" y="607.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (2,852 samples, 1.23%)</title><rect x="1164.0" y="597" width="14.4" height="15.0" fill="rgb(223,125,15)" rx="2" ry="2" />
<text  x="1166.98" y="607.5" ></text>
</g>
<g >
<title>established_get_first.isra.39 (22 samples, 0.01%)</title><rect x="11.2" y="421" width="0.1" height="15.0" fill="rgb(250,130,1)" rx="2" ry="2" />
<text  x="14.18" y="431.5" ></text>
</g>
<g >
<title>proc_reg_read (67 samples, 0.03%)</title><rect x="11.2" y="469" width="0.3" height="15.0" fill="rgb(222,221,20)" rx="2" ry="2" />
<text  x="14.16" y="479.5" ></text>
</g>
<g >
<title>node::NodeMainInstance::Run (345 samples, 0.15%)</title><rect x="11.5" y="549" width="1.8" height="15.0" fill="rgb(225,61,26)" rx="2" ry="2" />
<text  x="14.51" y="559.5" ></text>
</g>
<g >
<title>uv_spawn (61 samples, 0.03%)</title><rect x="11.9" y="165" width="0.3" height="15.0" fill="rgb(220,69,47)" rx="2" ry="2" />
<text  x="14.90" y="175.5" ></text>
</g>
<g >
<title>do_syscall_64 (60 samples, 0.03%)</title><rect x="11.9" y="117" width="0.3" height="15.0" fill="rgb(225,88,21)" rx="2" ry="2" />
<text  x="14.90" y="127.5" ></text>
</g>
<g >
<title>SimpleMath::Dynamic::Matrix&lt;double&gt;::Matrix&lt;SimpleMath::Dynamic::Matrix&lt;double&gt; &gt; (98 samples, 0.04%)</title><rect x="1043.7" y="581" width="0.5" height="15.0" fill="rgb(220,10,10)" rx="2" ry="2" />
<text  x="1046.66" y="591.5" ></text>
</g>
<g >
<title>__libc_fork (61 samples, 0.03%)</title><rect x="12.7" y="165" width="0.3" height="15.0" fill="rgb(218,27,27)" rx="2" ry="2" />
<text  x="15.69" y="175.5" ></text>
</g>
<g >
<title>[perf-745.map] (73 samples, 0.03%)</title><rect x="12.7" y="229" width="0.3" height="15.0" fill="rgb(243,151,40)" rx="2" ry="2" />
<text  x="15.67" y="239.5" ></text>
</g>
<g >
<title>RigidBodyDynamics::Math::SpatialTransform::toMatrixTranspose (1,316 samples, 0.57%)</title><rect x="952.3" y="597" width="6.7" height="15.0" fill="rgb(210,99,54)" rx="2" ry="2" />
<text  x="955.34" y="607.5" ></text>
</g>
<g >
<title>RigidBodyDynamics::Math::SpatialRigidBodyInertia::operator* (2,752 samples, 1.18%)</title><rect x="924.6" y="597" width="14.0" height="15.0" fill="rgb(221,123,34)" rx="2" ry="2" />
<text  x="927.62" y="607.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (49,624 samples, 21.34%)</title><rect x="643.1" y="565" width="251.8" height="15.0" fill="rgb(252,23,34)" rx="2" ry="2" />
<text  x="646.14" y="575.5" >x86_64_start_reservations</text>
</g>
<g >
<title>v8::internal::MicrotaskQueue::RunMicrotasks (87 samples, 0.04%)</title><rect x="12.6" y="437" width="0.4" height="15.0" fill="rgb(221,139,52)" rx="2" ry="2" />
<text  x="15.61" y="447.5" ></text>
</g>
<g >
<title>__GI_____strtod_l_internal (56 samples, 0.02%)</title><rect x="1136.9" y="581" width="0.2" height="15.0" fill="rgb(212,181,40)" rx="2" ry="2" />
<text  x="1139.85" y="591.5" ></text>
</g>
<g >
<title>RigidBodyDynamics::jcalc (3,497 samples, 1.50%)</title><rect x="1117.0" y="565" width="17.8" height="15.0" fill="rgb(222,150,16)" rx="2" ry="2" />
<text  x="1120.04" y="575.5" ></text>
</g>
<g >
<title>ksys_write (43 samples, 0.02%)</title><rect x="13.3" y="517" width="0.2" height="15.0" fill="rgb(214,87,50)" rx="2" ry="2" />
<text  x="16.29" y="527.5" ></text>
</g>
<g >
<title>start_kernel (49,624 samples, 21.34%)</title><rect x="643.1" y="549" width="251.8" height="15.0" fill="rgb(235,1,37)" rx="2" ry="2" />
<text  x="646.14" y="559.5" >start_kernel</text>
</g>
<g >
<title>_do_fork (61 samples, 0.03%)</title><rect x="12.7" y="101" width="0.3" height="15.0" fill="rgb(215,110,40)" rx="2" ry="2" />
<text  x="15.69" y="111.5" ></text>
</g>
<g >
<title>SimpleMath::Dynamic::Matrix&lt;double&gt;::Matrix&lt;SimpleMath::Dynamic::Matrix&lt;double&gt; &gt; (300 samples, 0.13%)</title><rect x="978.1" y="597" width="1.6" height="15.0" fill="rgb(218,44,29)" rx="2" ry="2" />
<text  x="981.14" y="607.5" ></text>
</g>
<g >
<title>seq_read (67 samples, 0.03%)</title><rect x="11.2" y="453" width="0.3" height="15.0" fill="rgb(213,2,22)" rx="2" ry="2" />
<text  x="14.16" y="463.5" ></text>
</g>
<g >
<title>malloc (111 samples, 0.05%)</title><rect x="1135.6" y="565" width="0.6" height="15.0" fill="rgb(251,61,33)" rx="2" ry="2" />
<text  x="1138.61" y="575.5" ></text>
</g>
<g >
<title>operator new[] (20 samples, 0.01%)</title><rect x="1136.7" y="565" width="0.1" height="15.0" fill="rgb(210,67,44)" rx="2" ry="2" />
<text  x="1139.70" y="575.5" ></text>
</g>
<g >
<title>do_syscall_64 (30 samples, 0.01%)</title><rect x="15.3" y="549" width="0.1" height="15.0" fill="rgb(229,16,45)" rx="2" ry="2" />
<text  x="18.25" y="559.5" ></text>
</g>
<g >
<title>free@plt (119 samples, 0.05%)</title><rect x="1178.5" y="597" width="0.6" height="15.0" fill="rgb(214,79,32)" rx="2" ry="2" />
<text  x="1181.45" y="607.5" ></text>
</g>
<g >
<title>operator delete (33 samples, 0.01%)</title><rect x="1043.1" y="565" width="0.2" height="15.0" fill="rgb(228,97,35)" rx="2" ry="2" />
<text  x="1046.09" y="575.5" ></text>
</g>
<g >
<title>__sched_text_end (49,602 samples, 21.33%)</title><rect x="643.1" y="437" width="251.7" height="15.0" fill="rgb(253,2,22)" rx="2" ry="2" />
<text  x="646.14" y="447.5" >__sched_text_end</text>
</g>
<g >
<title>arch_cpu_idle (49,602 samples, 21.33%)</title><rect x="643.1" y="453" width="251.7" height="15.0" fill="rgb(238,95,7)" rx="2" ry="2" />
<text  x="646.14" y="463.5" >arch_cpu_idle</text>
</g>
<g >
<title>SimpleMath::Fixed::Matrix&lt;double, 6u, 6u&gt;::operator*&lt;6u, 6u&gt;@plt (20 samples, 0.01%)</title><rect x="1098.3" y="581" width="0.1" height="15.0" fill="rgb(215,181,39)" rx="2" ry="2" />
<text  x="1101.33" y="591.5" ></text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::Invoke (105 samples, 0.05%)</title><rect x="11.8" y="389" width="0.5" height="15.0" fill="rgb(220,103,51)" rx="2" ry="2" />
<text  x="14.79" y="399.5" ></text>
</g>
<g >
<title>SimpleMath::Dynamic::Matrix&lt;double&gt;::~Matrix (85 samples, 0.04%)</title><rect x="1051.4" y="581" width="0.4" height="15.0" fill="rgb(247,51,10)" rx="2" ry="2" />
<text  x="1054.38" y="591.5" ></text>
</g>
<g >
<title>RigidBodyDynamics::Math::SpatialTransform::applyTranspose (455 samples, 0.20%)</title><rect x="943.2" y="597" width="2.3" height="15.0" fill="rgb(240,143,40)" rx="2" ry="2" />
<text  x="946.20" y="607.5" ></text>
</g>
<g >
<title>__sched_text_end (123,360 samples, 53.04%)</title><rect x="17.1" y="501" width="625.9" height="15.0" fill="rgb(230,5,23)" rx="2" ry="2" />
<text  x="20.10" y="511.5" >__sched_text_end</text>
</g>
<g >
<title>swapper (173,010 samples, 74.39%)</title><rect x="17.1" y="613" width="877.8" height="15.0" fill="rgb(216,219,52)" rx="2" ry="2" />
<text  x="20.08" y="623.5" >swapper</text>
</g>
<g >
<title>__x64_sys_clone (61 samples, 0.03%)</title><rect x="12.7" y="117" width="0.3" height="15.0" fill="rgb(233,208,44)" rx="2" ry="2" />
<text  x="15.69" y="127.5" ></text>
</g>
<g >
<title>[perf-745.map] (85 samples, 0.04%)</title><rect x="12.6" y="325" width="0.4" height="15.0" fill="rgb(233,96,13)" rx="2" ry="2" />
<text  x="15.61" y="335.5" ></text>
</g>
<g >
<title>ps (282 samples, 0.12%)</title><rect x="15.0" y="613" width="1.4" height="15.0" fill="rgb(236,122,10)" rx="2" ry="2" />
<text  x="17.99" y="623.5" ></text>
</g>
<g >
<title>__libc_fork (60 samples, 0.03%)</title><rect x="11.9" y="149" width="0.3" height="15.0" fill="rgb(220,17,8)" rx="2" ry="2" />
<text  x="14.90" y="159.5" ></text>
</g>
<g >
<title>do_syscall_64 (61 samples, 0.03%)</title><rect x="12.7" y="133" width="0.3" height="15.0" fill="rgb(228,163,44)" rx="2" ry="2" />
<text  x="15.69" y="143.5" ></text>
</g>
<g >
<title>start_secondary (123,386 samples, 53.06%)</title><rect x="17.1" y="581" width="626.0" height="15.0" fill="rgb(224,113,32)" rx="2" ry="2" />
<text  x="20.08" y="591.5" >start_secondary</text>
</g>
<g >
<title>SimpleMath::Block&lt;SimpleMath::Dynamic::Matrix&lt;double&gt;, double&gt;::operator=&lt;SimpleMath::Fixed::Matrix&lt;double, 3u, 1u&gt; &gt; (429 samples, 0.18%)</title><rect x="960.6" y="597" width="2.1" height="15.0" fill="rgb(231,171,9)" rx="2" ry="2" />
<text  x="963.56" y="607.5" ></text>
</g>
<g >
<title>__libc_start_main (345 samples, 0.15%)</title><rect x="11.5" y="581" width="1.8" height="15.0" fill="rgb(217,24,29)" rx="2" ry="2" />
<text  x="14.51" y="591.5" ></text>
</g>
<g >
<title>[perf-745.map] (71 samples, 0.03%)</title><rect x="11.9" y="213" width="0.3" height="15.0" fill="rgb(228,176,1)" rx="2" ry="2" />
<text  x="14.88" y="223.5" ></text>
</g>
<g >
<title>eventfd_write (39 samples, 0.02%)</title><rect x="13.3" y="469" width="0.2" height="15.0" fill="rgb(236,79,0)" rx="2" ry="2" />
<text  x="16.30" y="479.5" ></text>
</g>
<g >
<title>operator new (24 samples, 0.01%)</title><rect x="1189.5" y="597" width="0.1" height="15.0" fill="rgb(228,180,18)" rx="2" ry="2" />
<text  x="1192.46" y="607.5" ></text>
</g>
<g >
<title>sshd (59 samples, 0.03%)</title><rect x="16.8" y="613" width="0.3" height="15.0" fill="rgb(248,50,47)" rx="2" ry="2" />
<text  x="19.78" y="623.5" ></text>
</g>
<g >
<title>pthread_cond_wait@@GLIBC_2.3.2 (21 samples, 0.01%)</title><rect x="13.6" y="581" width="0.1" height="15.0" fill="rgb(221,150,23)" rx="2" ry="2" />
<text  x="16.63" y="591.5" ></text>
</g>
<g >
<title>RigidBodyDynamics::Math::SpatialTransform::operator* (1,332 samples, 0.57%)</title><rect x="945.5" y="597" width="6.8" height="15.0" fill="rgb(222,6,34)" rx="2" ry="2" />
<text  x="948.53" y="607.5" ></text>
</g>
<g >
<title>SimpleMath::Dynamic::Matrix&lt;double&gt;::~Matrix (689 samples, 0.30%)</title><rect x="1038.2" y="565" width="3.5" height="15.0" fill="rgb(224,4,22)" rx="2" ry="2" />
<text  x="1041.17" y="575.5" ></text>
</g>
<g >
<title>Builtins_RunMicrotasks (85 samples, 0.04%)</title><rect x="12.6" y="373" width="0.4" height="15.0" fill="rgb(228,26,16)" rx="2" ry="2" />
<text  x="15.61" y="383.5" ></text>
</g>
<g >
<title>operator delete[] (42 samples, 0.02%)</title><rect x="1043.4" y="565" width="0.3" height="15.0" fill="rgb(235,168,14)" rx="2" ry="2" />
<text  x="1046.45" y="575.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::ProcessWrap::Spawn (66 samples, 0.03%)</title><rect x="12.7" y="197" width="0.3" height="15.0" fill="rgb(247,163,30)" rx="2" ry="2" />
<text  x="15.68" y="207.5" ></text>
</g>
<g >
<title>RigidBodyDynamics::Math::SpatialTransform::applyTranspose@plt (49 samples, 0.02%)</title><rect x="1116.8" y="565" width="0.2" height="15.0" fill="rgb(243,50,54)" rx="2" ry="2" />
<text  x="1119.79" y="575.5" ></text>
</g>
<g >
<title>__x64_sys_clone (60 samples, 0.03%)</title><rect x="11.9" y="101" width="0.3" height="15.0" fill="rgb(241,211,46)" rx="2" ry="2" />
<text  x="14.90" y="111.5" ></text>
</g>
<g >
<title>vfs_read (72 samples, 0.03%)</title><rect x="11.1" y="501" width="0.4" height="15.0" fill="rgb(244,71,38)" rx="2" ry="2" />
<text  x="14.15" y="511.5" ></text>
</g>
<g >
<title>start_thread (61 samples, 0.03%)</title><rect x="14.7" y="597" width="0.3" height="15.0" fill="rgb(218,210,11)" rx="2" ry="2" />
<text  x="17.66" y="607.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (47 samples, 0.02%)</title><rect x="1053.1" y="565" width="0.2" height="15.0" fill="rgb(207,28,21)" rx="2" ry="2" />
<text  x="1056.07" y="575.5" ></text>
</g>
<g >
<title>operator delete (30 samples, 0.01%)</title><rect x="1146.9" y="581" width="0.1" height="15.0" fill="rgb(224,32,25)" rx="2" ry="2" />
<text  x="1149.89" y="591.5" ></text>
</g>
<g >
<title>__vfs_read (40 samples, 0.02%)</title><rect x="16.2" y="501" width="0.2" height="15.0" fill="rgb(231,81,20)" rx="2" ry="2" />
<text  x="19.21" y="511.5" ></text>
</g>
<g >
<title>SimpleMath::Block&lt;SimpleMath::Fixed::Matrix&lt;double, 6u, 6u&gt;, double&gt;::operator=&lt;SimpleMath::Fixed::Matrix&lt;double, 3u, 3u&gt; &gt; (3,014 samples, 1.30%)</title><rect x="962.7" y="597" width="15.3" height="15.0" fill="rgb(245,52,15)" rx="2" ry="2" />
<text  x="965.74" y="607.5" ></text>
</g>
<g >
<title>[unknown] (28 samples, 0.01%)</title><rect x="10.2" y="597" width="0.2" height="15.0" fill="rgb(226,27,9)" rx="2" ry="2" />
<text  x="13.21" y="607.5" ></text>
</g>
<g >
<title>SimpleMath::Block&lt;SimpleMath::Dynamic::Matrix&lt;double&gt;, double&gt;::operator=&lt;SimpleMath::Dynamic::Matrix&lt;double&gt; &gt; (430 samples, 0.18%)</title><rect x="1018.5" y="581" width="2.2" height="15.0" fill="rgb(233,203,44)" rx="2" ry="2" />
<text  x="1021.48" y="591.5" ></text>
</g>
<g >
<title>do_syscall_64 (43 samples, 0.02%)</title><rect x="13.3" y="549" width="0.2" height="15.0" fill="rgb(211,18,50)" rx="2" ry="2" />
<text  x="16.29" y="559.5" ></text>
</g>
<g >
<title>malloc (1,170 samples, 0.50%)</title><rect x="1140.0" y="581" width="6.0" height="15.0" fill="rgb(217,51,3)" rx="2" ry="2" />
<text  x="1143.04" y="591.5" ></text>
</g>
<g >
<title>do_syscall_64 (75 samples, 0.03%)</title><rect x="11.1" y="549" width="0.4" height="15.0" fill="rgb(252,5,32)" rx="2" ry="2" />
<text  x="14.13" y="559.5" ></text>
</g>
<g >
<title>free@plt (36 samples, 0.02%)</title><rect x="1139.9" y="581" width="0.1" height="15.0" fill="rgb(246,71,44)" rx="2" ry="2" />
<text  x="1142.85" y="591.5" ></text>
</g>
<g >
<title>grep (69 samples, 0.03%)</title><rect x="10.2" y="613" width="0.3" height="15.0" fill="rgb(239,18,23)" rx="2" ry="2" />
<text  x="13.18" y="623.5" ></text>
</g>
<g >
<title>v8::internal::Execution::TryRunMicrotasks (86 samples, 0.04%)</title><rect x="12.6" y="421" width="0.4" height="15.0" fill="rgb(230,175,43)" rx="2" ry="2" />
<text  x="15.61" y="431.5" ></text>
</g>
<g >
<title>SimpleMath::Dynamic::Matrix&lt;double&gt;::operator* (1,273 samples, 0.55%)</title><rect x="1044.2" y="581" width="6.5" height="15.0" fill="rgb(226,187,52)" rx="2" ry="2" />
<text  x="1047.20" y="591.5" ></text>
</g>
<g >
<title>__x64_sys_read (41 samples, 0.02%)</title><rect x="16.2" y="549" width="0.2" height="15.0" fill="rgb(239,171,46)" rx="2" ry="2" />
<text  x="19.21" y="559.5" ></text>
</g>
<g >
<title>RigidBodyDynamics::Math::SpatialTransform::apply (881 samples, 0.38%)</title><rect x="938.7" y="597" width="4.4" height="15.0" fill="rgb(253,197,25)" rx="2" ry="2" />
<text  x="941.66" y="607.5" ></text>
</g>
<g >
<title>__x64_sys_futex (42 samples, 0.02%)</title><rect x="14.4" y="549" width="0.3" height="15.0" fill="rgb(247,77,3)" rx="2" ry="2" />
<text  x="17.44" y="559.5" ></text>
</g>
<g >
<title>uv__io_poll (327 samples, 0.14%)</title><rect x="11.5" y="517" width="1.7" height="15.0" fill="rgb(230,162,13)" rx="2" ry="2" />
<text  x="14.52" y="527.5" ></text>
</g>
<g >
<title>__libc_start_main (218 samples, 0.09%)</title><rect x="1137.1" y="581" width="1.1" height="15.0" fill="rgb(214,1,26)" rx="2" ry="2" />
<text  x="1140.13" y="591.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (30 samples, 0.01%)</title><rect x="15.3" y="565" width="0.1" height="15.0" fill="rgb(216,191,10)" rx="2" ry="2" />
<text  x="18.25" y="575.5" ></text>
</g>
<g >
<title>do_syscall_64 (42 samples, 0.02%)</title><rect x="14.4" y="565" width="0.3" height="15.0" fill="rgb(242,211,47)" rx="2" ry="2" />
<text  x="17.44" y="575.5" ></text>
</g>
<g >
<title>do_syscall_64 (41 samples, 0.02%)</title><rect x="16.2" y="565" width="0.2" height="15.0" fill="rgb(218,153,15)" rx="2" ry="2" />
<text  x="19.21" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (20 samples, 0.01%)</title><rect x="1137.8" y="517" width="0.1" height="15.0" fill="rgb(205,217,13)" rx="2" ry="2" />
<text  x="1140.81" y="527.5" ></text>
</g>
<g >
<title>operator delete@plt (38 samples, 0.02%)</title><rect x="1043.3" y="565" width="0.1" height="15.0" fill="rgb(205,28,52)" rx="2" ry="2" />
<text  x="1046.26" y="575.5" ></text>
</g>
<g >
<title>RigidBodyDynamics::ForwardDynamics (3,363 samples, 1.45%)</title><rect x="897.1" y="597" width="17.1" height="15.0" fill="rgb(205,114,32)" rx="2" ry="2" />
<text  x="900.11" y="607.5" ></text>
</g>
<g >
<title>ksys_read (41 samples, 0.02%)</title><rect x="16.2" y="533" width="0.2" height="15.0" fill="rgb(215,166,50)" rx="2" ry="2" />
<text  x="19.21" y="543.5" ></text>
</g>
<g >
<title>SimpleMath::Dynamic::Matrix&lt;double&gt;::~Matrix (25 samples, 0.01%)</title><rect x="982.4" y="581" width="0.1" height="15.0" fill="rgb(220,162,51)" rx="2" ry="2" />
<text  x="985.38" y="591.5" ></text>
</g>
<g >
<title>operator&gt;&gt; (47 samples, 0.02%)</title><rect x="1137.7" y="549" width="0.3" height="15.0" fill="rgb(250,218,47)" rx="2" ry="2" />
<text  x="1140.72" y="559.5" ></text>
</g>
<g >
<title>[perf-745.map] (75 samples, 0.03%)</title><rect x="12.7" y="261" width="0.3" height="15.0" fill="rgb(206,170,21)" rx="2" ry="2" />
<text  x="15.66" y="271.5" ></text>
</g>
<g >
<title>RigidBodyDynamics::Math::SpatialTransform::toMatrixTranspose (48 samples, 0.02%)</title><rect x="1010.1" y="581" width="0.3" height="15.0" fill="rgb(249,69,51)" rx="2" ry="2" />
<text  x="1013.13" y="591.5" ></text>
</g>
<g >
<title>__GI_____strtod_l_internal (63 samples, 0.03%)</title><rect x="1151.9" y="597" width="0.3" height="15.0" fill="rgb(234,144,52)" rx="2" ry="2" />
<text  x="1154.87" y="607.5" ></text>
</g>
<g >
<title>_do_fork (60 samples, 0.03%)</title><rect x="11.9" y="85" width="0.3" height="15.0" fill="rgb(237,115,31)" rx="2" ry="2" />
<text  x="14.90" y="95.5" ></text>
</g>
<g >
<title>do_futex (42 samples, 0.02%)</title><rect x="14.4" y="533" width="0.3" height="15.0" fill="rgb(223,77,9)" rx="2" ry="2" />
<text  x="17.44" y="543.5" ></text>
</g>
<g >
<title>malloc@plt (177 samples, 0.08%)</title><rect x="1146.0" y="581" width="0.9" height="15.0" fill="rgb(218,89,23)" rx="2" ry="2" />
<text  x="1148.97" y="591.5" ></text>
</g>
<g >
<title>[unknown] (27 samples, 0.01%)</title><rect x="16.8" y="597" width="0.2" height="15.0" fill="rgb(241,66,53)" rx="2" ry="2" />
<text  x="19.81" y="607.5" ></text>
</g>
<g >
<title>default_idle_call (123,362 samples, 53.05%)</title><rect x="17.1" y="533" width="625.9" height="15.0" fill="rgb(209,122,36)" rx="2" ry="2" />
<text  x="20.09" y="543.5" >default_idle_call</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (89 samples, 0.04%)</title><rect x="13.7" y="581" width="0.5" height="15.0" fill="rgb(221,42,12)" rx="2" ry="2" />
<text  x="16.73" y="591.5" ></text>
</g>
<g >
<title>arch_call_rest_init (49,624 samples, 21.34%)</title><rect x="643.1" y="533" width="251.8" height="15.0" fill="rgb(249,82,9)" rx="2" ry="2" />
<text  x="646.14" y="543.5" >arch_call_rest_init</text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (48 samples, 0.02%)</title><rect x="1138.2" y="581" width="0.3" height="15.0" fill="rgb(217,81,30)" rx="2" ry="2" />
<text  x="1141.24" y="591.5" ></text>
</g>
<g >
<title>SimpleMath::Block&lt;SimpleMath::Fixed::Matrix&lt;double, 6u, 6u&gt;, double&gt;::operator=&lt;SimpleMath::Fixed::Matrix&lt;double, 3u, 3u&gt; &gt; (2,364 samples, 1.02%)</title><rect x="1022.3" y="581" width="12.0" height="15.0" fill="rgb(250,36,15)" rx="2" ry="2" />
<text  x="1025.30" y="591.5" ></text>
</g>
<g >
<title>uv_spawn (64 samples, 0.03%)</title><rect x="12.7" y="181" width="0.3" height="15.0" fill="rgb(227,158,36)" rx="2" ry="2" />
<text  x="15.69" y="191.5" ></text>
</g>
<g >
<title>all (232,560 samples, 100%)</title><rect x="10.0" y="629" width="1180.0" height="15.0" fill="rgb(222,214,8)" rx="2" ry="2" />
<text  x="13.00" y="639.5" ></text>
</g>
<g >
<title>[ls] (21 samples, 0.01%)</title><rect x="10.6" y="597" width="0.1" height="15.0" fill="rgb(217,95,30)" rx="2" ry="2" />
<text  x="13.62" y="607.5" ></text>
</g>
<g >
<title>unmap_page_range (60 samples, 0.03%)</title><rect x="13.9" y="405" width="0.3" height="15.0" fill="rgb(236,131,43)" rx="2" ry="2" />
<text  x="16.88" y="415.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (197 samples, 0.08%)</title><rect x="1138.9" y="581" width="1.0" height="15.0" fill="rgb(244,130,47)" rx="2" ry="2" />
<text  x="1141.85" y="591.5" ></text>
</g>
<g >
<title>seq_read (39 samples, 0.02%)</title><rect x="16.2" y="485" width="0.2" height="15.0" fill="rgb(209,82,40)" rx="2" ry="2" />
<text  x="19.22" y="495.5" ></text>
</g>
<g >
<title>operator new@plt (31 samples, 0.01%)</title><rect x="1136.5" y="565" width="0.2" height="15.0" fill="rgb(251,89,36)" rx="2" ry="2" />
<text  x="1139.54" y="575.5" ></text>
</g>
<g >
<title>operator delete@plt (108 samples, 0.05%)</title><rect x="1187.9" y="597" width="0.5" height="15.0" fill="rgb(254,90,18)" rx="2" ry="2" />
<text  x="1190.87" y="607.5" ></text>
</g>
<g >
<title>operator new[] (195 samples, 0.08%)</title><rect x="1150.1" y="581" width="1.0" height="15.0" fill="rgb(246,37,12)" rx="2" ry="2" />
<text  x="1153.15" y="591.5" ></text>
</g>
<g >
<title>pthread_cond_signal@@GLIBC_2.3.2 (49 samples, 0.02%)</title><rect x="14.4" y="597" width="0.3" height="15.0" fill="rgb(225,194,19)" rx="2" ry="2" />
<text  x="17.40" y="607.5" ></text>
</g>
<g >
<title>Builtins_PromiseFulfillReactionJob (104 samples, 0.04%)</title><rect x="11.8" y="341" width="0.5" height="15.0" fill="rgb(254,25,16)" rx="2" ry="2" />
<text  x="14.80" y="351.5" ></text>
</g>
<g >
<title>RigidBodyDynamics::Math::SpatialRigidBodyInertia::toMatrix (71 samples, 0.03%)</title><rect x="1006.6" y="581" width="0.4" height="15.0" fill="rgb(243,173,12)" rx="2" ry="2" />
<text  x="1009.62" y="591.5" ></text>
</g>
<g >
<title>ls (93 samples, 0.04%)</title><rect x="10.6" y="613" width="0.5" height="15.0" fill="rgb(248,157,54)" rx="2" ry="2" />
<text  x="13.61" y="623.5" ></text>
</g>
<g >
<title>SimpleMath::Fixed::Matrix&lt;double, 3u, 3u&gt;::inverse (573 samples, 0.25%)</title><rect x="979.7" y="597" width="2.9" height="15.0" fill="rgb(236,14,24)" rx="2" ry="2" />
<text  x="982.70" y="607.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (42 samples, 0.02%)</title><rect x="14.4" y="581" width="0.3" height="15.0" fill="rgb(217,223,46)" rx="2" ry="2" />
<text  x="17.44" y="591.5" ></text>
</g>
<g >
<title>Builtins_CallApiCallback (66 samples, 0.03%)</title><rect x="12.7" y="213" width="0.3" height="15.0" fill="rgb(211,54,7)" rx="2" ry="2" />
<text  x="15.68" y="223.5" ></text>
</g>
<g >
<title>operator delete@plt (25 samples, 0.01%)</title><rect x="1147.0" y="581" width="0.2" height="15.0" fill="rgb(243,90,24)" rx="2" ry="2" />
<text  x="1150.04" y="591.5" ></text>
</g>
<g >
<title>[perf-745.map] (76 samples, 0.03%)</title><rect x="12.7" y="293" width="0.3" height="15.0" fill="rgb(230,142,5)" rx="2" ry="2" />
<text  x="15.65" y="303.5" ></text>
</g>
<g >
<title>Builtins_RunMicrotasks (104 samples, 0.04%)</title><rect x="11.8" y="357" width="0.5" height="15.0" fill="rgb(235,101,27)" rx="2" ry="2" />
<text  x="14.80" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_read (72 samples, 0.03%)</title><rect x="11.1" y="533" width="0.4" height="15.0" fill="rgb(246,193,24)" rx="2" ry="2" />
<text  x="14.15" y="543.5" ></text>
</g>
<g >
<title>RigidBodyDynamics::jcalc_X_lambda_S (185 samples, 0.08%)</title><rect x="959.5" y="597" width="1.0" height="15.0" fill="rgb(237,58,17)" rx="2" ry="2" />
<text  x="962.53" y="607.5" ></text>
</g>
<g >
<title>path_openat (22 samples, 0.01%)</title><rect x="15.3" y="485" width="0.1" height="15.0" fill="rgb(249,34,12)" rx="2" ry="2" />
<text  x="18.26" y="495.5" ></text>
</g>
<g >
<title>worker (29 samples, 0.01%)</title><rect x="14.8" y="581" width="0.2" height="15.0" fill="rgb(217,181,38)" rx="2" ry="2" />
<text  x="17.83" y="591.5" ></text>
</g>
<g >
<title>native_safe_halt (49,602 samples, 21.33%)</title><rect x="643.1" y="421" width="251.7" height="15.0" fill="rgb(236,148,9)" rx="2" ry="2" />
<text  x="646.14" y="431.5" >native_safe_halt</text>
</g>
<g >
<title>dup_mm (61 samples, 0.03%)</title><rect x="12.7" y="69" width="0.3" height="15.0" fill="rgb(206,71,14)" rx="2" ry="2" />
<text  x="15.69" y="79.5" ></text>
</g>
<g >
<title>uv__async_io (300 samples, 0.13%)</title><rect x="11.5" y="501" width="1.5" height="15.0" fill="rgb(213,49,35)" rx="2" ry="2" />
<text  x="14.53" y="511.5" ></text>
</g>
<g >
<title>__GI___execve (89 samples, 0.04%)</title><rect x="13.7" y="597" width="0.5" height="15.0" fill="rgb(236,127,4)" rx="2" ry="2" />
<text  x="16.73" y="607.5" ></text>
</g>
<g >
<title>sh (72 samples, 0.03%)</title><rect x="16.4" y="613" width="0.4" height="15.0" fill="rgb(230,178,15)" rx="2" ry="2" />
<text  x="19.42" y="623.5" ></text>
</g>
<g >
<title>uv__work_done (270 samples, 0.12%)</title><rect x="11.7" y="485" width="1.3" height="15.0" fill="rgb(227,95,49)" rx="2" ry="2" />
<text  x="14.68" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_write (43 samples, 0.02%)</title><rect x="13.3" y="533" width="0.2" height="15.0" fill="rgb(205,12,15)" rx="2" ry="2" />
<text  x="16.29" y="543.5" ></text>
</g>
<g >
<title>cpu_startup_entry (123,386 samples, 53.06%)</title><rect x="17.1" y="565" width="626.0" height="15.0" fill="rgb(230,74,22)" rx="2" ry="2" />
<text  x="20.08" y="575.5" >cpu_startup_entry</text>
</g>
<g >
<title>node::(anonymous namespace)::PlatformWorkerThread (31 samples, 0.01%)</title><rect x="14.7" y="581" width="0.1" height="15.0" fill="rgb(248,186,2)" rx="2" ry="2" />
<text  x="17.66" y="591.5" ></text>
</g>
<g >
<title>time_rbdl (58,140 samples, 25.00%)</title><rect x="895.0" y="613" width="295.0" height="15.0" fill="rgb(208,196,20)" rx="2" ry="2" />
<text  x="898.00" y="623.5" >time_rbdl</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (60 samples, 0.03%)</title><rect x="11.9" y="133" width="0.3" height="15.0" fill="rgb(218,181,27)" rx="2" ry="2" />
<text  x="14.90" y="143.5" ></text>
</g>
<g >
<title>tcp_seq_start (29 samples, 0.01%)</title><rect x="11.4" y="437" width="0.1" height="15.0" fill="rgb(228,5,34)" rx="2" ry="2" />
<text  x="14.35" y="447.5" ></text>
</g>
<g >
<title>tcp_get_idx (29 samples, 0.01%)</title><rect x="11.4" y="421" width="0.1" height="15.0" fill="rgb(238,69,52)" rx="2" ry="2" />
<text  x="14.35" y="431.5" ></text>
</g>
<g >
<title>[unknown] (7,572 samples, 3.26%)</title><rect x="1098.4" y="581" width="38.5" height="15.0" fill="rgb(245,61,21)" rx="2" ry="2" />
<text  x="1101.43" y="591.5" >[un..</text>
</g>
<g >
<title>node::fs::AfterStringPtr (55 samples, 0.02%)</title><rect x="12.3" y="469" width="0.3" height="15.0" fill="rgb(243,104,25)" rx="2" ry="2" />
<text  x="15.33" y="479.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::ProcessWrap::Spawn (62 samples, 0.03%)</title><rect x="11.9" y="181" width="0.3" height="15.0" fill="rgb(254,159,5)" rx="2" ry="2" />
<text  x="14.89" y="191.5" ></text>
</g>
<g >
<title>schedule_idle (23 samples, 0.01%)</title><rect x="643.0" y="533" width="0.1" height="15.0" fill="rgb(206,161,6)" rx="2" ry="2" />
<text  x="646.02" y="543.5" ></text>
</g>
<g >
<title>SimpleMath::Fixed::Matrix&lt;double, 6u, 6u&gt;::operator*&lt;6u, 6u&gt; (8,847 samples, 3.80%)</title><rect x="1053.4" y="581" width="44.9" height="15.0" fill="rgb(211,66,2)" rx="2" ry="2" />
<text  x="1056.44" y="591.5" >Simp..</text>
</g>
<g >
<title>v8::internal::Execution::TryRunMicrotasks (105 samples, 0.05%)</title><rect x="11.8" y="405" width="0.5" height="15.0" fill="rgb(236,108,43)" rx="2" ry="2" />
<text  x="14.79" y="415.5" ></text>
</g>
<g >
<title>try_to_wake_up (39 samples, 0.02%)</title><rect x="14.5" y="485" width="0.2" height="15.0" fill="rgb(213,190,4)" rx="2" ry="2" />
<text  x="17.45" y="495.5" ></text>
</g>
<g >
<title>Builtins_PromiseFulfillReactionJob (85 samples, 0.04%)</title><rect x="12.6" y="357" width="0.4" height="15.0" fill="rgb(228,192,46)" rx="2" ry="2" />
<text  x="15.61" y="367.5" ></text>
</g>
<g >
<title>__lock_text_start (39 samples, 0.02%)</title><rect x="14.5" y="469" width="0.2" height="15.0" fill="rgb(254,10,2)" rx="2" ry="2" />
<text  x="17.45" y="479.5" ></text>
</g>
<g >
<title>operator delete[] (28 samples, 0.01%)</title><rect x="1147.2" y="581" width="0.1" height="15.0" fill="rgb(251,17,5)" rx="2" ry="2" />
<text  x="1150.17" y="591.5" ></text>
</g>
<g >
<title>SimpleMath::Block&lt;SimpleMath::Fixed::Matrix&lt;double, 6u, 6u&gt;, double&gt;::operator=&lt;SimpleMath::Fixed::Matrix&lt;double, 3u, 3u&gt; &gt;@plt (44 samples, 0.02%)</title><rect x="1034.3" y="581" width="0.2" height="15.0" fill="rgb(212,194,37)" rx="2" ry="2" />
<text  x="1037.29" y="591.5" ></text>
</g>
<g >
<title>RigidBodyDynamics::Math::SpatialTransform::applyTranspose (1,245 samples, 0.54%)</title><rect x="1110.5" y="565" width="6.3" height="15.0" fill="rgb(232,135,27)" rx="2" ry="2" />
<text  x="1113.47" y="575.5" ></text>
</g>
<g >
<title>RigidBodyDynamics::InverseDynamics (2,059 samples, 0.89%)</title><rect x="914.2" y="597" width="10.4" height="15.0" fill="rgb(246,193,34)" rx="2" ry="2" />
<text  x="917.17" y="607.5" ></text>
</g>
<g >
<title>node::InternalCallbackScope::~InternalCallbackScope (106 samples, 0.05%)</title><rect x="11.8" y="437" width="0.5" height="15.0" fill="rgb(234,94,49)" rx="2" ry="2" />
<text  x="14.79" y="447.5" ></text>
</g>
<g >
<title>copy_process (61 samples, 0.03%)</title><rect x="12.7" y="85" width="0.3" height="15.0" fill="rgb(219,196,50)" rx="2" ry="2" />
<text  x="15.69" y="95.5" ></text>
</g>
<g >
<title>SimpleMath::Dynamic::Matrix&lt;double&gt;::~Matrix@plt (30 samples, 0.01%)</title><rect x="1051.8" y="581" width="0.2" height="15.0" fill="rgb(227,148,20)" rx="2" ry="2" />
<text  x="1054.81" y="591.5" ></text>
</g>
<g >
<title>futex_wake (41 samples, 0.02%)</title><rect x="14.4" y="517" width="0.3" height="15.0" fill="rgb(245,23,16)" rx="2" ry="2" />
<text  x="17.44" y="527.5" ></text>
</g>
<g >
<title>__vfs_read (71 samples, 0.03%)</title><rect x="11.1" y="485" width="0.4" height="15.0" fill="rgb(237,70,41)" rx="2" ry="2" />
<text  x="14.15" y="495.5" ></text>
</g>
<g >
<title>dup_mm (58 samples, 0.02%)</title><rect x="11.9" y="53" width="0.3" height="15.0" fill="rgb(244,216,22)" rx="2" ry="2" />
<text  x="14.90" y="63.5" ></text>
</g>
<g >
<title>operator delete (117 samples, 0.05%)</title><rect x="1187.3" y="597" width="0.6" height="15.0" fill="rgb(233,115,12)" rx="2" ry="2" />
<text  x="1190.28" y="607.5" ></text>
</g>
<g >
<title>do_filp_open (22 samples, 0.01%)</title><rect x="15.3" y="501" width="0.1" height="15.0" fill="rgb(252,129,0)" rx="2" ry="2" />
<text  x="18.26" y="511.5" ></text>
</g>
<g >
<title>proc_pid_status (28 samples, 0.01%)</title><rect x="16.2" y="453" width="0.2" height="15.0" fill="rgb(216,172,43)" rx="2" ry="2" />
<text  x="19.23" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (41 samples, 0.02%)</title><rect x="16.2" y="581" width="0.2" height="15.0" fill="rgb(226,40,25)" rx="2" ry="2" />
<text  x="19.21" y="591.5" ></text>
</g>
<g >
<title>mmput (89 samples, 0.04%)</title><rect x="13.7" y="469" width="0.5" height="15.0" fill="rgb(246,22,37)" rx="2" ry="2" />
<text  x="16.73" y="479.5" ></text>
</g>
<g >
<title>[unknown] (39 samples, 0.02%)</title><rect x="10.7" y="597" width="0.2" height="15.0" fill="rgb(253,14,29)" rx="2" ry="2" />
<text  x="13.73" y="607.5" ></text>
</g>
<g >
<title>node::fs::AfterStat (112 samples, 0.05%)</title><rect x="11.8" y="469" width="0.5" height="15.0" fill="rgb(218,106,18)" rx="2" ry="2" />
<text  x="14.76" y="479.5" ></text>
</g>
<g >
<title>node::fs::FSReqAfterScope::Reject (39 samples, 0.02%)</title><rect x="12.3" y="453" width="0.2" height="15.0" fill="rgb(214,202,45)" rx="2" ry="2" />
<text  x="15.33" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (89 samples, 0.04%)</title><rect x="13.7" y="565" width="0.5" height="15.0" fill="rgb(254,217,51)" rx="2" ry="2" />
<text  x="16.73" y="575.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (76 samples, 0.03%)</title><rect x="11.1" y="565" width="0.4" height="15.0" fill="rgb(211,57,27)" rx="2" ry="2" />
<text  x="14.13" y="575.5" ></text>
</g>
<g >
<title>v8::internal::MicrotaskQueue::RunMicrotasks (105 samples, 0.05%)</title><rect x="11.8" y="421" width="0.5" height="15.0" fill="rgb(207,177,2)" rx="2" ry="2" />
<text  x="14.79" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (43 samples, 0.02%)</title><rect x="13.3" y="565" width="0.2" height="15.0" fill="rgb(213,179,50)" rx="2" ry="2" />
<text  x="16.29" y="575.5" ></text>
</g>
<g >
<title>node::fs::FSReqPromise&lt;node::AliasedBufferBase&lt;double, v8::Float64Array, void&gt; &gt;::Reject (23 samples, 0.01%)</title><rect x="12.4" y="437" width="0.1" height="15.0" fill="rgb(209,151,13)" rx="2" ry="2" />
<text  x="15.41" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;SimpleMath::Dynamic::Matrix&lt;double&gt;, std::allocator&lt;SimpleMath::Dynamic::Matrix&lt;double&gt; &gt; &gt;::operator[] (40 samples, 0.02%)</title><rect x="1138.0" y="549" width="0.2" height="15.0" fill="rgb(238,108,42)" rx="2" ry="2" />
<text  x="1140.96" y="559.5" ></text>
</g>
<g >
<title>SimpleMath::Dynamic::Matrix&lt;double&gt;::~Matrix (123 samples, 0.05%)</title><rect x="1052.4" y="565" width="0.7" height="15.0" fill="rgb(241,159,1)" rx="2" ry="2" />
<text  x="1055.44" y="575.5" ></text>
</g>
<g >
<title>ksys_read (72 samples, 0.03%)</title><rect x="11.1" y="517" width="0.4" height="15.0" fill="rgb(210,203,21)" rx="2" ry="2" />
<text  x="14.15" y="527.5" ></text>
</g>
<g >
<title>cpu_startup_entry (49,624 samples, 21.34%)</title><rect x="643.1" y="501" width="251.8" height="15.0" fill="rgb(245,22,39)" rx="2" ry="2" />
<text  x="646.14" y="511.5" >cpu_startup_entry</text>
</g>
<g >
<title>flush_old_exec (89 samples, 0.04%)</title><rect x="13.7" y="485" width="0.5" height="15.0" fill="rgb(212,226,5)" rx="2" ry="2" />
<text  x="16.73" y="495.5" ></text>
</g>
<g >
<title>__libc_write (48 samples, 0.02%)</title><rect x="13.3" y="581" width="0.2" height="15.0" fill="rgb(205,34,13)" rx="2" ry="2" />
<text  x="16.26" y="591.5" ></text>
</g>
<g >
<title>SimpleMath::Dynamic::Matrix&lt;double&gt;::operator= (132 samples, 0.06%)</title><rect x="1050.7" y="581" width="0.7" height="15.0" fill="rgb(207,193,41)" rx="2" ry="2" />
<text  x="1053.71" y="591.5" ></text>
</g>
<g >
<title>[perf-745.map] (72 samples, 0.03%)</title><rect x="11.9" y="277" width="0.3" height="15.0" fill="rgb(242,166,29)" rx="2" ry="2" />
<text  x="14.88" y="287.5" ></text>
</g>
<g >
<title>vfs_write (41 samples, 0.02%)</title><rect x="13.3" y="501" width="0.2" height="15.0" fill="rgb(210,168,6)" rx="2" ry="2" />
<text  x="16.30" y="511.5" ></text>
</g>
<g >
<title>node::fs::FSReqPromise&lt;node::AliasedBufferBase&lt;double, v8::Float64Array, void&gt; &gt;::ResolveStat (110 samples, 0.05%)</title><rect x="11.8" y="453" width="0.5" height="15.0" fill="rgb(238,189,11)" rx="2" ry="2" />
<text  x="14.77" y="463.5" ></text>
</g>
<g >
<title>default_idle_call (49,602 samples, 21.33%)</title><rect x="643.1" y="469" width="251.7" height="15.0" fill="rgb(216,14,3)" rx="2" ry="2" />
<text  x="646.14" y="479.5" >default_idle_call</text>
</g>
<g >
<title>read (45 samples, 0.02%)</title><rect x="16.2" y="597" width="0.2" height="15.0" fill="rgb(253,165,20)" rx="2" ry="2" />
<text  x="19.19" y="607.5" ></text>
</g>
<g >
<title>[unknown] (33,356 samples, 14.34%)</title><rect x="982.6" y="597" width="169.3" height="15.0" fill="rgb(232,40,16)" rx="2" ry="2" />
<text  x="985.62" y="607.5" >[unknown]</text>
</g>
<g >
<title>str_to_mpn.isra.0 (47 samples, 0.02%)</title><rect x="1189.8" y="597" width="0.2" height="15.0" fill="rgb(236,217,33)" rx="2" ry="2" />
<text  x="1192.76" y="607.5" ></text>
</g>
<g >
<title>_int_malloc (71 samples, 0.03%)</title><rect x="1163.6" y="597" width="0.4" height="15.0" fill="rgb(209,206,52)" rx="2" ry="2" />
<text  x="1166.62" y="607.5" ></text>
</g>
<g >
<title>RigidBodyDynamics::jcalc_X_lambda_S (1,571 samples, 0.68%)</title><rect x="1010.4" y="581" width="8.0" height="15.0" fill="rgb(205,11,44)" rx="2" ry="2" />
<text  x="1013.42" y="591.5" ></text>
</g>
<g >
<title>node::Start (345 samples, 0.15%)</title><rect x="11.5" y="565" width="1.8" height="15.0" fill="rgb(221,196,50)" rx="2" ry="2" />
<text  x="14.51" y="575.5" ></text>
</g>
<g >
<title>operator new (393 samples, 0.17%)</title><rect x="1147.4" y="581" width="1.9" height="15.0" fill="rgb(244,226,16)" rx="2" ry="2" />
<text  x="1150.35" y="591.5" ></text>
</g>
<g >
<title>malloc (1,604 samples, 0.69%)</title><rect x="1179.1" y="597" width="8.1" height="15.0" fill="rgb(215,187,24)" rx="2" ry="2" />
<text  x="1182.06" y="607.5" ></text>
</g>
<g >
<title>operator new (57 samples, 0.02%)</title><rect x="1136.3" y="565" width="0.2" height="15.0" fill="rgb(220,145,15)" rx="2" ry="2" />
<text  x="1139.25" y="575.5" ></text>
</g>
<g >
<title>[perf-745.map] (103 samples, 0.04%)</title><rect x="11.8" y="309" width="0.5" height="15.0" fill="rgb(210,19,15)" rx="2" ry="2" />
<text  x="14.80" y="319.5" ></text>
</g>
<g >
<title>wake_up_q (39 samples, 0.02%)</title><rect x="14.5" y="501" width="0.2" height="15.0" fill="rgb(211,199,5)" rx="2" ry="2" />
<text  x="17.45" y="511.5" ></text>
</g>
<g >
<title>unmap_vmas (62 samples, 0.03%)</title><rect x="13.9" y="437" width="0.3" height="15.0" fill="rgb(209,144,52)" rx="2" ry="2" />
<text  x="16.87" y="447.5" ></text>
</g>
<g >
<title>RigidBodyDynamics::CompositeRigidBodyAlgorithm (2,166 samples, 0.93%)</title><rect x="982.6" y="581" width="11.0" height="15.0" fill="rgb(240,128,25)" rx="2" ry="2" />
<text  x="985.63" y="591.5" ></text>
</g>
<g >
<title>v8::internal::CancelableTask::Run (31 samples, 0.01%)</title><rect x="14.7" y="565" width="0.1" height="15.0" fill="rgb(216,34,3)" rx="2" ry="2" />
<text  x="17.66" y="575.5" ></text>
</g>
<g >
<title>RigidBodyDynamics::CompositeRigidBodyAlgorithm (2,373 samples, 1.02%)</title><rect x="1098.4" y="565" width="12.1" height="15.0" fill="rgb(222,51,42)" rx="2" ry="2" />
<text  x="1101.43" y="575.5" ></text>
</g>
<g >
<title>Builtins_CallApiCallback (62 samples, 0.03%)</title><rect x="11.9" y="197" width="0.3" height="15.0" fill="rgb(216,205,27)" rx="2" ry="2" />
<text  x="14.89" y="207.5" ></text>
</g>
<g >
<title>RigidBodyDynamics::ForwardDynamics (2,563 samples, 1.10%)</title><rect x="993.6" y="581" width="13.0" height="15.0" fill="rgb(238,83,26)" rx="2" ry="2" />
<text  x="996.62" y="591.5" ></text>
</g>
<g >
<title>uv_run (345 samples, 0.15%)</title><rect x="11.5" y="533" width="1.8" height="15.0" fill="rgb(241,156,24)" rx="2" ry="2" />
<text  x="14.51" y="543.5" ></text>
</g>
<g >
<title>node (766 samples, 0.33%)</title><rect x="11.1" y="613" width="3.9" height="15.0" fill="rgb(214,70,18)" rx="2" ry="2" />
<text  x="14.09" y="623.5" ></text>
</g>
<g >
<title>__do_execve_file.isra.39 (89 samples, 0.04%)</title><rect x="13.7" y="533" width="0.5" height="15.0" fill="rgb(247,56,18)" rx="2" ry="2" />
<text  x="16.73" y="543.5" ></text>
</g>
</g>
</svg>
