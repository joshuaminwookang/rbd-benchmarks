<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="678" onload="init(evt)" viewBox="0 0 1200 678" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="678.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="661" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="661" > </text>
<g id="frames">
<g >
<title>do_idle (72,591 samples, 62.98%)</title><rect x="17.2" y="549" width="743.1" height="15.0" fill="rgb(225,209,19)" rx="2" ry="2" />
<text  x="20.18" y="559.5" >do_idle</text>
</g>
<g >
<title>Builtins_InterpreterEntryTrampoline (41 samples, 0.04%)</title><rect x="12.7" y="309" width="0.5" height="15.0" fill="rgb(243,71,52)" rx="2" ry="2" />
<text  x="15.74" y="319.5" ></text>
</g>
<g >
<title>copy_page_range (15 samples, 0.01%)</title><rect x="12.8" y="53" width="0.1" height="15.0" fill="rgb(233,160,35)" rx="2" ry="2" />
<text  x="15.77" y="63.5" ></text>
</g>
<g >
<title>do_futex (17 samples, 0.01%)</title><rect x="14.8" y="533" width="0.2" height="15.0" fill="rgb(212,148,7)" rx="2" ry="2" />
<text  x="17.79" y="543.5" ></text>
</g>
<g >
<title>[unknown] (17 samples, 0.01%)</title><rect x="10.6" y="597" width="0.2" height="15.0" fill="rgb(205,140,14)" rx="2" ry="2" />
<text  x="13.62" y="607.5" ></text>
</g>
<g >
<title>operator delete (27 samples, 0.02%)</title><rect x="1137.4" y="581" width="0.2" height="15.0" fill="rgb(248,117,0)" rx="2" ry="2" />
<text  x="1140.36" y="591.5" ></text>
</g>
<g >
<title>copy_process (18 samples, 0.02%)</title><rect x="12.7" y="85" width="0.2" height="15.0" fill="rgb(218,14,46)" rx="2" ry="2" />
<text  x="15.74" y="95.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (19 samples, 0.02%)</title><rect x="759.9" y="421" width="0.2" height="15.0" fill="rgb(224,114,14)" rx="2" ry="2" />
<text  x="762.93" y="431.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (10 samples, 0.01%)</title><rect x="14.6" y="597" width="0.1" height="15.0" fill="rgb(227,174,27)" rx="2" ry="2" />
<text  x="17.65" y="607.5" ></text>
</g>
<g >
<title>__x64_sys_clone (13 samples, 0.01%)</title><rect x="13.0" y="117" width="0.1" height="15.0" fill="rgb(252,101,39)" rx="2" ry="2" />
<text  x="15.96" y="127.5" ></text>
</g>
<g >
<title>SimpleMath::ColPivHouseholderQR&lt;SimpleMath::Fixed::Matrix&lt;double, 3u, 3u&gt; &gt;::compute (1,785 samples, 1.55%)</title><rect x="1024.9" y="581" width="18.3" height="15.0" fill="rgb(213,143,53)" rx="2" ry="2" />
<text  x="1027.95" y="591.5" ></text>
</g>
<g >
<title>do_syscall_64 (13 samples, 0.01%)</title><rect x="13.0" y="133" width="0.1" height="15.0" fill="rgb(226,47,36)" rx="2" ry="2" />
<text  x="15.96" y="143.5" ></text>
</g>
<g >
<title>operator new[]@plt (50 samples, 0.04%)</title><rect x="1142.3" y="581" width="0.5" height="15.0" fill="rgb(209,23,15)" rx="2" ry="2" />
<text  x="1145.28" y="591.5" ></text>
</g>
<g >
<title>search_binary_handler (46 samples, 0.04%)</title><rect x="14.0" y="517" width="0.5" height="15.0" fill="rgb(238,76,22)" rx="2" ry="2" />
<text  x="16.99" y="527.5" ></text>
</g>
<g >
<title>__libc_fork (13 samples, 0.01%)</title><rect x="11.9" y="149" width="0.1" height="15.0" fill="rgb(231,34,36)" rx="2" ry="2" />
<text  x="14.87" y="159.5" ></text>
</g>
<g >
<title>operator delete@plt (30 samples, 0.03%)</title><rect x="1042.7" y="565" width="0.3" height="15.0" fill="rgb(218,135,13)" rx="2" ry="2" />
<text  x="1045.68" y="575.5" ></text>
</g>
<g >
<title>SimpleMath::Dynamic::Matrix&lt;double&gt;::operator* (1,253 samples, 1.09%)</title><rect x="1044.0" y="581" width="12.9" height="15.0" fill="rgb(205,123,5)" rx="2" ry="2" />
<text  x="1047.04" y="591.5" ></text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::Invoke (73 samples, 0.06%)</title><rect x="11.6" y="389" width="0.8" height="15.0" fill="rgb(222,68,41)" rx="2" ry="2" />
<text  x="14.62" y="399.5" ></text>
</g>
<g >
<title>operator new@plt (10 samples, 0.01%)</title><rect x="1125.6" y="565" width="0.1" height="15.0" fill="rgb(218,219,3)" rx="2" ry="2" />
<text  x="1128.61" y="575.5" ></text>
</g>
<g >
<title>dup_mm (12 samples, 0.01%)</title><rect x="13.0" y="69" width="0.1" height="15.0" fill="rgb(232,133,39)" rx="2" ry="2" />
<text  x="15.96" y="79.5" ></text>
</g>
<g >
<title>malloc (1,402 samples, 1.22%)</title><rect x="1172.6" y="597" width="14.4" height="15.0" fill="rgb(215,174,24)" rx="2" ry="2" />
<text  x="1175.64" y="607.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (13,159 samples, 11.42%)</title><rect x="760.3" y="565" width="134.7" height="15.0" fill="rgb(208,180,51)" rx="2" ry="2" />
<text  x="763.29" y="575.5" >x86_64_start_rese..</text>
</g>
<g >
<title>Builtins_JSRunMicrotasksEntry (71 samples, 0.06%)</title><rect x="11.6" y="373" width="0.8" height="15.0" fill="rgb(208,137,51)" rx="2" ry="2" />
<text  x="14.63" y="383.5" ></text>
</g>
<g >
<title>dup_mm (18 samples, 0.02%)</title><rect x="12.7" y="69" width="0.2" height="15.0" fill="rgb(211,146,46)" rx="2" ry="2" />
<text  x="15.74" y="79.5" ></text>
</g>
<g >
<title>proc_reg_read (34 samples, 0.03%)</title><rect x="11.1" y="469" width="0.3" height="15.0" fill="rgb(236,7,28)" rx="2" ry="2" />
<text  x="14.07" y="479.5" ></text>
</g>
<g >
<title>operator delete@plt (31 samples, 0.03%)</title><rect x="1137.6" y="581" width="0.4" height="15.0" fill="rgb(213,21,36)" rx="2" ry="2" />
<text  x="1140.64" y="591.5" ></text>
</g>
<g >
<title>RigidBodyDynamics::Math::SpatialTransform::applyTranspose (202 samples, 0.18%)</title><rect x="940.7" y="597" width="2.1" height="15.0" fill="rgb(233,17,17)" rx="2" ry="2" />
<text  x="943.73" y="607.5" ></text>
</g>
<g >
<title>exit_mmap (45 samples, 0.04%)</title><rect x="14.0" y="453" width="0.5" height="15.0" fill="rgb(226,66,21)" rx="2" ry="2" />
<text  x="16.99" y="463.5" ></text>
</g>
<g >
<title>v8::internal::MicrotaskQueue::RunMicrotasks (13 samples, 0.01%)</title><rect x="12.5" y="405" width="0.1" height="15.0" fill="rgb(230,28,33)" rx="2" ry="2" />
<text  x="15.46" y="415.5" ></text>
</g>
<g >
<title>vfs_read (37 samples, 0.03%)</title><rect x="11.0" y="501" width="0.4" height="15.0" fill="rgb(225,222,6)" rx="2" ry="2" />
<text  x="14.04" y="511.5" ></text>
</g>
<g >
<title>swapper (85,750 samples, 74.39%)</title><rect x="17.2" y="613" width="877.8" height="15.0" fill="rgb(240,135,2)" rx="2" ry="2" />
<text  x="20.18" y="623.5" >swapper</text>
</g>
<g >
<title>__sincos (49 samples, 0.04%)</title><rect x="1124.1" y="565" width="0.5" height="15.0" fill="rgb(233,25,31)" rx="2" ry="2" />
<text  x="1127.12" y="575.5" ></text>
</g>
<g >
<title>v8::internal::Execution::TryRunMicrotasks (13 samples, 0.01%)</title><rect x="12.5" y="389" width="0.1" height="15.0" fill="rgb(224,145,12)" rx="2" ry="2" />
<text  x="15.46" y="399.5" ></text>
</g>
<g >
<title>SimpleMath::ColPivHouseholderQR&lt;SimpleMath::Fixed::Matrix&lt;double, 3u, 3u&gt; &gt;::compute (10 samples, 0.01%)</title><rect x="971.0" y="597" width="0.1" height="15.0" fill="rgb(211,129,29)" rx="2" ry="2" />
<text  x="973.99" y="607.5" ></text>
</g>
<g >
<title>try_to_wake_up (13 samples, 0.01%)</title><rect x="14.8" y="485" width="0.2" height="15.0" fill="rgb(218,91,2)" rx="2" ry="2" />
<text  x="17.83" y="495.5" ></text>
</g>
<g >
<title>node::InternalCallbackScope::~InternalCallbackScope (75 samples, 0.07%)</title><rect x="11.6" y="437" width="0.8" height="15.0" fill="rgb(245,189,34)" rx="2" ry="2" />
<text  x="14.60" y="447.5" ></text>
</g>
<g >
<title>Builtins_PromiseFulfillReactionJob (71 samples, 0.06%)</title><rect x="11.6" y="341" width="0.8" height="15.0" fill="rgb(224,222,23)" rx="2" ry="2" />
<text  x="14.63" y="351.5" ></text>
</g>
<g >
<title>finish_task_switch (13 samples, 0.01%)</title><rect x="760.1" y="501" width="0.2" height="15.0" fill="rgb(230,28,9)" rx="2" ry="2" />
<text  x="763.14" y="511.5" ></text>
</g>
<g >
<title>RigidBodyDynamics::Math::SpatialTransform::toMatrixTranspose (32 samples, 0.03%)</title><rect x="1002.6" y="581" width="0.3" height="15.0" fill="rgb(222,128,47)" rx="2" ry="2" />
<text  x="1005.58" y="591.5" ></text>
</g>
<g >
<title>__sincos (925 samples, 0.80%)</title><rect x="1144.0" y="597" width="9.5" height="15.0" fill="rgb(220,47,53)" rx="2" ry="2" />
<text  x="1147.01" y="607.5" ></text>
</g>
<g >
<title>RigidBodyDynamics::Math::SpatialTransform::applyTranspose (262 samples, 0.23%)</title><rect x="1106.7" y="565" width="2.7" height="15.0" fill="rgb(247,184,47)" rx="2" ry="2" />
<text  x="1109.71" y="575.5" ></text>
</g>
<g >
<title>Builtins_CallApiCallback (13 samples, 0.01%)</title><rect x="13.0" y="213" width="0.1" height="15.0" fill="rgb(216,172,20)" rx="2" ry="2" />
<text  x="15.96" y="223.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::ProcessWrap::Spawn (11 samples, 0.01%)</title><rect x="12.0" y="181" width="0.1" height="15.0" fill="rgb(225,87,47)" rx="2" ry="2" />
<text  x="15.04" y="191.5" ></text>
</g>
<g >
<title>_do_fork (10 samples, 0.01%)</title><rect x="12.0" y="85" width="0.1" height="15.0" fill="rgb(212,37,47)" rx="2" ry="2" />
<text  x="15.04" y="95.5" ></text>
</g>
<g >
<title>node::Start (204 samples, 0.18%)</title><rect x="11.4" y="565" width="2.1" height="15.0" fill="rgb(213,203,38)" rx="2" ry="2" />
<text  x="14.42" y="575.5" ></text>
</g>
<g >
<title>node::InternalCallbackScope::~InternalCallbackScope (15 samples, 0.01%)</title><rect x="12.4" y="421" width="0.2" height="15.0" fill="rgb(215,14,42)" rx="2" ry="2" />
<text  x="15.44" y="431.5" ></text>
</g>
<g >
<title>arch_cpu_idle (13,151 samples, 11.41%)</title><rect x="760.3" y="453" width="134.6" height="15.0" fill="rgb(214,83,19)" rx="2" ry="2" />
<text  x="763.29" y="463.5" >arch_cpu_idle</text>
</g>
<g >
<title>node::(anonymous namespace)::PlatformWorkerThread (27 samples, 0.02%)</title><rect x="15.0" y="581" width="0.3" height="15.0" fill="rgb(220,142,32)" rx="2" ry="2" />
<text  x="17.98" y="591.5" ></text>
</g>
<g >
<title>__GI___printf_fp_l (32 samples, 0.03%)</title><rect x="1143.3" y="597" width="0.3" height="15.0" fill="rgb(219,66,51)" rx="2" ry="2" />
<text  x="1146.29" y="607.5" ></text>
</g>
<g >
<title>__vfs_read (25 samples, 0.02%)</title><rect x="16.4" y="501" width="0.3" height="15.0" fill="rgb(253,67,44)" rx="2" ry="2" />
<text  x="19.45" y="511.5" ></text>
</g>
<g >
<title>proc_single_show (22 samples, 0.02%)</title><rect x="16.5" y="469" width="0.2" height="15.0" fill="rgb(254,66,31)" rx="2" ry="2" />
<text  x="19.48" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.01%)</title><rect x="13.9" y="565" width="0.1" height="15.0" fill="rgb(216,70,0)" rx="2" ry="2" />
<text  x="16.89" y="575.5" ></text>
</g>
<g >
<title>RigidBodyDynamics::ForwardDynamics (1,016 samples, 0.88%)</title><rect x="988.3" y="581" width="10.4" height="15.0" fill="rgb(219,40,50)" rx="2" ry="2" />
<text  x="991.33" y="591.5" ></text>
</g>
<g >
<title>v8::internal::Execution::TryRunMicrotasks (47 samples, 0.04%)</title><rect x="12.7" y="421" width="0.5" height="15.0" fill="rgb(244,44,12)" rx="2" ry="2" />
<text  x="15.68" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_execve (46 samples, 0.04%)</title><rect x="14.0" y="549" width="0.5" height="15.0" fill="rgb(221,13,37)" rx="2" ry="2" />
<text  x="16.99" y="559.5" ></text>
</g>
<g >
<title>_do_fork (13 samples, 0.01%)</title><rect x="13.0" y="101" width="0.1" height="15.0" fill="rgb(254,47,8)" rx="2" ry="2" />
<text  x="15.96" y="111.5" ></text>
</g>
<g >
<title>__schedule (13 samples, 0.01%)</title><rect x="760.1" y="517" width="0.2" height="15.0" fill="rgb(227,147,28)" rx="2" ry="2" />
<text  x="763.14" y="527.5" ></text>
</g>
<g >
<title>uv_spawn (13 samples, 0.01%)</title><rect x="13.0" y="181" width="0.1" height="15.0" fill="rgb(248,8,35)" rx="2" ry="2" />
<text  x="15.96" y="191.5" ></text>
</g>
<g >
<title>__libc_fork (10 samples, 0.01%)</title><rect x="12.0" y="149" width="0.1" height="15.0" fill="rgb(213,218,2)" rx="2" ry="2" />
<text  x="15.04" y="159.5" ></text>
</g>
<g >
<title>copy_page_range (11 samples, 0.01%)</title><rect x="13.0" y="53" width="0.1" height="15.0" fill="rgb(254,91,30)" rx="2" ry="2" />
<text  x="15.96" y="63.5" ></text>
</g>
<g >
<title>malloc@plt (85 samples, 0.07%)</title><rect x="1136.4" y="581" width="0.9" height="15.0" fill="rgb(243,132,51)" rx="2" ry="2" />
<text  x="1139.44" y="591.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.01%)</title><rect x="13.0" y="149" width="0.1" height="15.0" fill="rgb(243,166,26)" rx="2" ry="2" />
<text  x="15.96" y="159.5" ></text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::Invoke (12 samples, 0.01%)</title><rect x="12.5" y="373" width="0.1" height="15.0" fill="rgb(254,11,5)" rx="2" ry="2" />
<text  x="15.47" y="383.5" ></text>
</g>
<g >
<title>RigidBodyDynamics::CompositeRigidBodyAlgorithm (946 samples, 0.82%)</title><rect x="978.6" y="581" width="9.7" height="15.0" fill="rgb(253,123,34)" rx="2" ry="2" />
<text  x="981.65" y="591.5" ></text>
</g>
<g >
<title>SimpleMath::Dynamic::Matrix&lt;double&gt;::~Matrix (687 samples, 0.60%)</title><rect x="1032.4" y="565" width="7.1" height="15.0" fill="rgb(235,100,23)" rx="2" ry="2" />
<text  x="1035.42" y="575.5" ></text>
</g>
<g >
<title>schedule_idle (13 samples, 0.01%)</title><rect x="760.1" y="533" width="0.2" height="15.0" fill="rgb(244,146,3)" rx="2" ry="2" />
<text  x="763.14" y="543.5" ></text>
</g>
<g >
<title>node (429 samples, 0.37%)</title><rect x="11.0" y="613" width="4.4" height="15.0" fill="rgb(215,20,0)" rx="2" ry="2" />
<text  x="13.98" y="623.5" ></text>
</g>
<g >
<title>operator delete (61 samples, 0.05%)</title><rect x="1187.1" y="597" width="0.6" height="15.0" fill="rgb(248,229,34)" rx="2" ry="2" />
<text  x="1190.10" y="607.5" ></text>
</g>
<g >
<title>node::fs::AfterStat (77 samples, 0.07%)</title><rect x="11.6" y="469" width="0.8" height="15.0" fill="rgb(225,161,1)" rx="2" ry="2" />
<text  x="14.59" y="479.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (87 samples, 0.08%)</title><rect x="1127.1" y="581" width="0.9" height="15.0" fill="rgb(253,111,51)" rx="2" ry="2" />
<text  x="1130.09" y="591.5" ></text>
</g>
<g >
<title>arch_call_rest_init (13,159 samples, 11.42%)</title><rect x="760.3" y="533" width="134.7" height="15.0" fill="rgb(214,39,54)" rx="2" ry="2" />
<text  x="763.29" y="543.5" >arch_call_rest_init</text>
</g>
<g >
<title>default_idle_call (72,576 samples, 62.96%)</title><rect x="17.2" y="533" width="742.9" height="15.0" fill="rgb(226,175,32)" rx="2" ry="2" />
<text  x="20.18" y="543.5" >default_idle_call</text>
</g>
<g >
<title>RigidBodyDynamics::Math::SpatialRigidBodyInertia::operator* (1,179 samples, 1.02%)</title><rect x="924.5" y="597" width="12.1" height="15.0" fill="rgb(243,177,18)" rx="2" ry="2" />
<text  x="927.52" y="607.5" ></text>
</g>
<g >
<title>sh (42 samples, 0.04%)</title><rect x="16.7" y="613" width="0.5" height="15.0" fill="rgb(222,193,47)" rx="2" ry="2" />
<text  x="19.74" y="623.5" ></text>
</g>
<g >
<title>[unknown] (17 samples, 0.01%)</title><rect x="10.2" y="597" width="0.2" height="15.0" fill="rgb(247,166,27)" rx="2" ry="2" />
<text  x="13.21" y="607.5" ></text>
</g>
<g >
<title>SimpleMath::Block&lt;SimpleMath::Dynamic::Matrix&lt;double&gt;, double&gt;::operator=&lt;SimpleMath::Fixed::Matrix&lt;double, 3u, 1u&gt; &gt; (147 samples, 0.13%)</title><rect x="955.4" y="597" width="1.5" height="15.0" fill="rgb(205,51,24)" rx="2" ry="2" />
<text  x="958.39" y="607.5" ></text>
</g>
<g >
<title>[unknown] (2,416 samples, 2.10%)</title><rect x="1101.1" y="581" width="24.7" height="15.0" fill="rgb(240,17,24)" rx="2" ry="2" />
<text  x="1104.10" y="591.5" >[..</text>
</g>
<g >
<title>v8::internal::Execution::TryRunMicrotasks (74 samples, 0.06%)</title><rect x="11.6" y="405" width="0.8" height="15.0" fill="rgb(254,161,49)" rx="2" ry="2" />
<text  x="14.61" y="415.5" ></text>
</g>
<g >
<title>[perf-745.map] (14 samples, 0.01%)</title><rect x="11.9" y="213" width="0.1" height="15.0" fill="rgb(228,111,22)" rx="2" ry="2" />
<text  x="14.87" y="223.5" ></text>
</g>
<g >
<title>str_to_mpn.isra.0 (21 samples, 0.02%)</title><rect x="1189.8" y="597" width="0.2" height="15.0" fill="rgb(234,38,50)" rx="2" ry="2" />
<text  x="1192.79" y="607.5" ></text>
</g>
<g >
<title>SimpleMath::Block&lt;SimpleMath::Fixed::Matrix&lt;double, 6u, 6u&gt;, double&gt;::operator=&lt;SimpleMath::Fixed::Matrix&lt;double, 3u, 3u&gt; &gt; (1,364 samples, 1.18%)</title><rect x="956.9" y="597" width="14.0" height="15.0" fill="rgb(210,150,20)" rx="2" ry="2" />
<text  x="959.89" y="607.5" ></text>
</g>
<g >
<title>seq_read (34 samples, 0.03%)</title><rect x="11.1" y="453" width="0.3" height="15.0" fill="rgb(246,49,4)" rx="2" ry="2" />
<text  x="14.07" y="463.5" ></text>
</g>
<g >
<title>node::StreamBase::CallJSOnreadMethod (14 samples, 0.01%)</title><rect x="13.3" y="437" width="0.1" height="15.0" fill="rgb(239,106,47)" rx="2" ry="2" />
<text  x="16.27" y="447.5" ></text>
</g>
<g >
<title>__libc_start_main (98 samples, 0.09%)</title><rect x="1126.1" y="581" width="1.0" height="15.0" fill="rgb(244,50,19)" rx="2" ry="2" />
<text  x="1129.06" y="591.5" ></text>
</g>
<g >
<title>__x64_sys_clone (18 samples, 0.02%)</title><rect x="12.7" y="117" width="0.2" height="15.0" fill="rgb(209,67,0)" rx="2" ry="2" />
<text  x="15.74" y="127.5" ></text>
</g>
<g >
<title>operator new (16 samples, 0.01%)</title><rect x="1189.3" y="597" width="0.2" height="15.0" fill="rgb(226,215,21)" rx="2" ry="2" />
<text  x="1192.33" y="607.5" ></text>
</g>
<g >
<title>eventfd_write (18 samples, 0.02%)</title><rect x="13.5" y="469" width="0.2" height="15.0" fill="rgb(253,53,40)" rx="2" ry="2" />
<text  x="16.52" y="479.5" ></text>
</g>
<g >
<title>operator new (211 samples, 0.18%)</title><rect x="1138.2" y="581" width="2.2" height="15.0" fill="rgb(245,190,32)" rx="2" ry="2" />
<text  x="1141.22" y="591.5" ></text>
</g>
<g >
<title>__libc_fork (13 samples, 0.01%)</title><rect x="13.0" y="165" width="0.1" height="15.0" fill="rgb(225,100,37)" rx="2" ry="2" />
<text  x="15.96" y="175.5" ></text>
</g>
<g >
<title>[perf-745.map] (13 samples, 0.01%)</title><rect x="12.2" y="293" width="0.2" height="15.0" fill="rgb(218,12,7)" rx="2" ry="2" />
<text  x="15.22" y="303.5" ></text>
</g>
<g >
<title>load_elf_binary (46 samples, 0.04%)</title><rect x="14.0" y="501" width="0.5" height="15.0" fill="rgb(220,47,5)" rx="2" ry="2" />
<text  x="16.99" y="511.5" ></text>
</g>
<g >
<title>vfs_write (20 samples, 0.02%)</title><rect x="13.5" y="501" width="0.2" height="15.0" fill="rgb(216,61,44)" rx="2" ry="2" />
<text  x="16.52" y="511.5" ></text>
</g>
<g >
<title>CSVRow::readNextRow (22 samples, 0.02%)</title><rect x="1126.5" y="533" width="0.2" height="15.0" fill="rgb(220,92,32)" rx="2" ry="2" />
<text  x="1129.52" y="543.5" ></text>
</g>
<g >
<title>[perf-745.map] (47 samples, 0.04%)</title><rect x="12.7" y="325" width="0.5" height="15.0" fill="rgb(218,148,42)" rx="2" ry="2" />
<text  x="15.68" y="335.5" ></text>
</g>
<g >
<title>Builtins_ArgumentsAdaptorTrampoline (27 samples, 0.02%)</title><rect x="11.9" y="261" width="0.2" height="15.0" fill="rgb(224,117,44)" rx="2" ry="2" />
<text  x="14.87" y="271.5" ></text>
</g>
<g >
<title>SimpleMath::Block&lt;SimpleMath::Dynamic::Matrix&lt;double&gt;, double&gt;::operator= (19 samples, 0.02%)</title><rect x="1123.9" y="565" width="0.2" height="15.0" fill="rgb(211,82,10)" rx="2" ry="2" />
<text  x="1126.88" y="575.5" ></text>
</g>
<g >
<title>operator delete (38 samples, 0.03%)</title><rect x="1042.3" y="565" width="0.4" height="15.0" fill="rgb(215,44,5)" rx="2" ry="2" />
<text  x="1045.29" y="575.5" ></text>
</g>
<g >
<title>node::LibuvStreamWrap::ReadStart (14 samples, 0.01%)</title><rect x="13.3" y="469" width="0.1" height="15.0" fill="rgb(215,181,22)" rx="2" ry="2" />
<text  x="16.27" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (14 samples, 0.01%)</title><rect x="13.7" y="549" width="0.2" height="15.0" fill="rgb(250,53,25)" rx="2" ry="2" />
<text  x="16.74" y="559.5" ></text>
</g>
<g >
<title>vfs_read (26 samples, 0.02%)</title><rect x="16.4" y="517" width="0.3" height="15.0" fill="rgb(215,54,38)" rx="2" ry="2" />
<text  x="19.45" y="527.5" ></text>
</g>
<g >
<title>operator new[] (89 samples, 0.08%)</title><rect x="1141.4" y="581" width="0.9" height="15.0" fill="rgb(211,147,17)" rx="2" ry="2" />
<text  x="1144.36" y="591.5" ></text>
</g>
<g >
<title>[unknown] (13 samples, 0.01%)</title><rect x="10.1" y="597" width="0.1" height="15.0" fill="rgb(222,172,25)" rx="2" ry="2" />
<text  x="13.07" y="607.5" ></text>
</g>
<g >
<title>Builtins_InterpreterEntryTrampoline (21 samples, 0.02%)</title><rect x="12.7" y="245" width="0.3" height="15.0" fill="rgb(242,228,51)" rx="2" ry="2" />
<text  x="15.74" y="255.5" ></text>
</g>
<g >
<title>free@plt (19 samples, 0.02%)</title><rect x="1129.7" y="581" width="0.2" height="15.0" fill="rgb(224,107,15)" rx="2" ry="2" />
<text  x="1132.72" y="591.5" ></text>
</g>
<g >
<title>free@plt (37 samples, 0.03%)</title><rect x="1172.3" y="597" width="0.3" height="15.0" fill="rgb(205,157,0)" rx="2" ry="2" />
<text  x="1175.26" y="607.5" ></text>
</g>
<g >
<title>RigidBodyDynamics::Math::SpatialRigidBodyInertia::operator*@plt (12 samples, 0.01%)</title><rect x="936.6" y="597" width="0.1" height="15.0" fill="rgb(210,25,28)" rx="2" ry="2" />
<text  x="939.59" y="607.5" ></text>
</g>
<g >
<title>[unknown] (57 samples, 0.05%)</title><rect x="15.4" y="597" width="0.6" height="15.0" fill="rgb(220,31,29)" rx="2" ry="2" />
<text  x="18.39" y="607.5" ></text>
</g>
<g >
<title>ksys_write (20 samples, 0.02%)</title><rect x="13.5" y="517" width="0.2" height="15.0" fill="rgb(239,127,38)" rx="2" ry="2" />
<text  x="16.52" y="527.5" ></text>
</g>
<g >
<title>malloc@plt (11 samples, 0.01%)</title><rect x="1187.0" y="597" width="0.1" height="15.0" fill="rgb(232,154,31)" rx="2" ry="2" />
<text  x="1189.99" y="607.5" ></text>
</g>
<g >
<title>__x64_sys_futex (17 samples, 0.01%)</title><rect x="14.8" y="549" width="0.2" height="15.0" fill="rgb(210,30,16)" rx="2" ry="2" />
<text  x="17.79" y="559.5" ></text>
</g>
<g >
<title>malloc@plt (12 samples, 0.01%)</title><rect x="1125.2" y="565" width="0.1" height="15.0" fill="rgb(252,201,47)" rx="2" ry="2" />
<text  x="1128.19" y="575.5" ></text>
</g>
<g >
<title>uv_spawn (10 samples, 0.01%)</title><rect x="12.0" y="165" width="0.1" height="15.0" fill="rgb(236,107,18)" rx="2" ry="2" />
<text  x="15.04" y="175.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.02%)</title><rect x="12.7" y="149" width="0.2" height="15.0" fill="rgb(239,191,30)" rx="2" ry="2" />
<text  x="15.74" y="159.5" ></text>
</g>
<g >
<title>node::NodeMainInstance::Run (204 samples, 0.18%)</title><rect x="11.4" y="549" width="2.1" height="15.0" fill="rgb(213,203,7)" rx="2" ry="2" />
<text  x="14.42" y="559.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (26 samples, 0.02%)</title><rect x="16.4" y="581" width="0.3" height="15.0" fill="rgb(226,114,15)" rx="2" ry="2" />
<text  x="19.45" y="591.5" ></text>
</g>
<g >
<title>operator delete[] (23 samples, 0.02%)</title><rect x="1043.0" y="565" width="0.2" height="15.0" fill="rgb(241,33,34)" rx="2" ry="2" />
<text  x="1045.99" y="575.5" ></text>
</g>
<g >
<title>[perf-745.map] (37 samples, 0.03%)</title><rect x="12.7" y="261" width="0.4" height="15.0" fill="rgb(252,200,37)" rx="2" ry="2" />
<text  x="15.74" y="271.5" ></text>
</g>
<g >
<title>malloc (10 samples, 0.01%)</title><rect x="1143.4" y="581" width="0.1" height="15.0" fill="rgb(225,21,43)" rx="2" ry="2" />
<text  x="1146.38" y="591.5" ></text>
</g>
<g >
<title>SimpleMath::Block&lt;SimpleMath::Dynamic::Matrix&lt;double&gt;, double&gt;::operator=&lt;SimpleMath::Fixed::Matrix&lt;double, 3u, 1u&gt; &gt; (135 samples, 0.12%)</title><rect x="1013.4" y="581" width="1.4" height="15.0" fill="rgb(241,19,36)" rx="2" ry="2" />
<text  x="1016.42" y="591.5" ></text>
</g>
<g >
<title>node::fs::FSReqPromise&lt;node::AliasedBufferBase&lt;double, v8::Float64Array, void&gt; &gt;::Reject (17 samples, 0.01%)</title><rect x="12.4" y="437" width="0.2" height="15.0" fill="rgb(207,19,39)" rx="2" ry="2" />
<text  x="15.43" y="447.5" ></text>
</g>
<g >
<title>operator new@plt (96 samples, 0.08%)</title><rect x="1140.4" y="581" width="1.0" height="15.0" fill="rgb(212,184,39)" rx="2" ry="2" />
<text  x="1143.38" y="591.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.01%)</title><rect x="13.7" y="565" width="0.2" height="15.0" fill="rgb(252,33,31)" rx="2" ry="2" />
<text  x="16.73" y="575.5" ></text>
</g>
<g >
<title>cpu_startup_entry (13,158 samples, 11.42%)</title><rect x="760.3" y="501" width="134.7" height="15.0" fill="rgb(225,155,53)" rx="2" ry="2" />
<text  x="763.29" y="511.5" >cpu_startup_entry</text>
</g>
<g >
<title>do_idle (13,158 samples, 11.42%)</title><rect x="760.3" y="485" width="134.7" height="15.0" fill="rgb(230,174,32)" rx="2" ry="2" />
<text  x="763.29" y="495.5" >do_idle</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.02%)</title><rect x="14.8" y="581" width="0.2" height="15.0" fill="rgb(225,182,26)" rx="2" ry="2" />
<text  x="17.78" y="591.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (250 samples, 0.22%)</title><rect x="1039.5" y="565" width="2.5" height="15.0" fill="rgb(237,85,27)" rx="2" ry="2" />
<text  x="1042.45" y="575.5" ></text>
</g>
<g >
<title>tcp_seq_next (20 samples, 0.02%)</title><rect x="11.1" y="437" width="0.2" height="15.0" fill="rgb(233,112,12)" rx="2" ry="2" />
<text  x="14.07" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (15 samples, 0.01%)</title><rect x="1126.6" y="517" width="0.1" height="15.0" fill="rgb(253,22,37)" rx="2" ry="2" />
<text  x="1129.59" y="527.5" ></text>
</g>
<g >
<title>node::fs::FSReqPromise&lt;node::AliasedBufferBase&lt;double, v8::Float64Array, void&gt; &gt;::ResolveStat (77 samples, 0.07%)</title><rect x="11.6" y="453" width="0.8" height="15.0" fill="rgb(224,115,15)" rx="2" ry="2" />
<text  x="14.59" y="463.5" ></text>
</g>
<g >
<title>RigidBodyDynamics::Math::SpatialTransform::toMatrix (292 samples, 0.25%)</title><rect x="999.6" y="581" width="3.0" height="15.0" fill="rgb(229,56,22)" rx="2" ry="2" />
<text  x="1002.57" y="591.5" ></text>
</g>
<g >
<title>node::fs::FileHandle::ClosePromise (47 samples, 0.04%)</title><rect x="12.7" y="469" width="0.5" height="15.0" fill="rgb(237,86,21)" rx="2" ry="2" />
<text  x="15.68" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (13 samples, 0.01%)</title><rect x="11.9" y="117" width="0.1" height="15.0" fill="rgb(214,26,5)" rx="2" ry="2" />
<text  x="14.87" y="127.5" ></text>
</g>
<g >
<title>[perf-745.map] (12 samples, 0.01%)</title><rect x="12.0" y="213" width="0.1" height="15.0" fill="rgb(245,167,46)" rx="2" ry="2" />
<text  x="15.03" y="223.5" ></text>
</g>
<g >
<title>__vfs_write (18 samples, 0.02%)</title><rect x="13.5" y="485" width="0.2" height="15.0" fill="rgb(245,200,33)" rx="2" ry="2" />
<text  x="16.52" y="495.5" ></text>
</g>
<g >
<title>node::InternalMakeCallback (14 samples, 0.01%)</title><rect x="13.3" y="405" width="0.1" height="15.0" fill="rgb(223,151,4)" rx="2" ry="2" />
<text  x="16.27" y="415.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (39 samples, 0.03%)</title><rect x="1061.6" y="565" width="0.4" height="15.0" fill="rgb(246,87,41)" rx="2" ry="2" />
<text  x="1064.62" y="575.5" ></text>
</g>
<g >
<title>pthread_cond_signal@@GLIBC_2.3.2 (20 samples, 0.02%)</title><rect x="14.8" y="597" width="0.2" height="15.0" fill="rgb(250,216,11)" rx="2" ry="2" />
<text  x="17.76" y="607.5" ></text>
</g>
<g >
<title>unmap_single_vma (36 samples, 0.03%)</title><rect x="14.1" y="421" width="0.4" height="15.0" fill="rgb(250,199,35)" rx="2" ry="2" />
<text  x="17.08" y="431.5" ></text>
</g>
<g >
<title>v8::internal::MicrotaskQueue::RunMicrotasks (47 samples, 0.04%)</title><rect x="12.7" y="437" width="0.5" height="15.0" fill="rgb(215,32,26)" rx="2" ry="2" />
<text  x="15.68" y="447.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (19 samples, 0.02%)</title><rect x="759.9" y="469" width="0.2" height="15.0" fill="rgb(228,7,19)" rx="2" ry="2" />
<text  x="762.93" y="479.5" ></text>
</g>
<g >
<title>_int_malloc (60 samples, 0.05%)</title><rect x="1153.5" y="597" width="0.6" height="15.0" fill="rgb(215,42,53)" rx="2" ry="2" />
<text  x="1156.47" y="607.5" ></text>
</g>
<g >
<title>__libc_write (21 samples, 0.02%)</title><rect x="13.5" y="581" width="0.2" height="15.0" fill="rgb(221,182,41)" rx="2" ry="2" />
<text  x="16.51" y="591.5" ></text>
</g>
<g >
<title>SimpleMath::Dynamic::Matrix&lt;double&gt;::~Matrix@plt (34 samples, 0.03%)</title><rect x="1059.2" y="581" width="0.4" height="15.0" fill="rgb(249,96,53)" rx="2" ry="2" />
<text  x="1062.24" y="591.5" ></text>
</g>
<g >
<title>time_rbdl (28,817 samples, 25.00%)</title><rect x="895.0" y="613" width="295.0" height="15.0" fill="rgb(230,114,33)" rx="2" ry="2" />
<text  x="898.00" y="623.5" >time_rbdl</text>
</g>
<g >
<title>__GI___execve (46 samples, 0.04%)</title><rect x="14.0" y="597" width="0.5" height="15.0" fill="rgb(213,210,0)" rx="2" ry="2" />
<text  x="16.99" y="607.5" ></text>
</g>
<g >
<title>__GI_____strtod_l_internal (30 samples, 0.03%)</title><rect x="1143.0" y="597" width="0.3" height="15.0" fill="rgb(244,106,49)" rx="2" ry="2" />
<text  x="1145.98" y="607.5" ></text>
</g>
<g >
<title>RigidBodyDynamics::Math::SpatialTransform::apply (382 samples, 0.33%)</title><rect x="936.7" y="597" width="3.9" height="15.0" fill="rgb(216,22,48)" rx="2" ry="2" />
<text  x="939.74" y="607.5" ></text>
</g>
<g >
<title>SimpleMath::Fixed::Matrix&lt;double, 6u, 6u&gt;::operator*&lt;6u, 6u&gt; (3,789 samples, 3.29%)</title><rect x="1062.3" y="581" width="38.8" height="15.0" fill="rgb(217,83,31)" rx="2" ry="2" />
<text  x="1065.27" y="591.5" >Sim..</text>
</g>
<g >
<title>SimpleMath::Dynamic::Matrix&lt;double&gt;::~Matrix (78 samples, 0.07%)</title><rect x="1058.4" y="581" width="0.8" height="15.0" fill="rgb(234,117,9)" rx="2" ry="2" />
<text  x="1061.44" y="591.5" ></text>
</g>
<g >
<title>ep_poll (13 samples, 0.01%)</title><rect x="13.7" y="501" width="0.2" height="15.0" fill="rgb(244,164,23)" rx="2" ry="2" />
<text  x="16.75" y="511.5" ></text>
</g>
<g >
<title>Builtins_CallApiCallback (11 samples, 0.01%)</title><rect x="12.0" y="197" width="0.1" height="15.0" fill="rgb(206,31,30)" rx="2" ry="2" />
<text  x="15.04" y="207.5" ></text>
</g>
<g >
<title>__sincos (19 samples, 0.02%)</title><rect x="1128.0" y="581" width="0.2" height="15.0" fill="rgb(246,227,50)" rx="2" ry="2" />
<text  x="1130.99" y="591.5" ></text>
</g>
<g >
<title>__x64_sys_clone (10 samples, 0.01%)</title><rect x="12.0" y="101" width="0.1" height="15.0" fill="rgb(207,187,26)" rx="2" ry="2" />
<text  x="15.04" y="111.5" ></text>
</g>
<g >
<title>SimpleMath::Block&lt;SimpleMath::Fixed::Matrix&lt;double, 6u, 6u&gt;, double&gt;::operator=&lt;SimpleMath::Fixed::Matrix&lt;double, 3u, 3u&gt; &gt;@plt (13 samples, 0.01%)</title><rect x="1024.8" y="581" width="0.1" height="15.0" fill="rgb(207,121,44)" rx="2" ry="2" />
<text  x="1027.82" y="591.5" ></text>
</g>
<g >
<title>ksys_read (26 samples, 0.02%)</title><rect x="16.4" y="533" width="0.3" height="15.0" fill="rgb(232,160,18)" rx="2" ry="2" />
<text  x="19.45" y="543.5" ></text>
</g>
<g >
<title>__sched_text_end (72,573 samples, 62.96%)</title><rect x="17.2" y="501" width="742.9" height="15.0" fill="rgb(236,196,45)" rx="2" ry="2" />
<text  x="20.20" y="511.5" >__sched_text_end</text>
</g>
<g >
<title>__libc_fork (18 samples, 0.02%)</title><rect x="12.7" y="165" width="0.2" height="15.0" fill="rgb(206,38,27)" rx="2" ry="2" />
<text  x="15.74" y="175.5" ></text>
</g>
<g >
<title>start_secondary (72,591 samples, 62.98%)</title><rect x="17.2" y="581" width="743.1" height="15.0" fill="rgb(253,197,7)" rx="2" ry="2" />
<text  x="20.18" y="591.5" >start_secondary</text>
</g>
<g >
<title>start_thread (39 samples, 0.03%)</title><rect x="15.0" y="597" width="0.4" height="15.0" fill="rgb(224,59,15)" rx="2" ry="2" />
<text  x="17.98" y="607.5" ></text>
</g>
<g >
<title>start_kernel (13,159 samples, 11.42%)</title><rect x="760.3" y="549" width="134.7" height="15.0" fill="rgb(226,156,47)" rx="2" ry="2" />
<text  x="763.29" y="559.5" >start_kernel</text>
</g>
<g >
<title>RigidBodyDynamics::Math::SpatialTransform::applyTranspose (23 samples, 0.02%)</title><rect x="999.3" y="581" width="0.3" height="15.0" fill="rgb(228,126,21)" rx="2" ry="2" />
<text  x="1002.34" y="591.5" ></text>
</g>
<g >
<title>secondary_startup_64 (85,750 samples, 74.39%)</title><rect x="17.2" y="597" width="877.8" height="15.0" fill="rgb(226,43,46)" rx="2" ry="2" />
<text  x="20.18" y="607.5" >secondary_startup_64</text>
</g>
<g >
<title>__x64_sys_clone (13 samples, 0.01%)</title><rect x="11.9" y="101" width="0.1" height="15.0" fill="rgb(216,92,38)" rx="2" ry="2" />
<text  x="14.87" y="111.5" ></text>
</g>
<g >
<title>SimpleMath::Fixed::Matrix&lt;double, 3u, 3u&gt;::inverse (470 samples, 0.41%)</title><rect x="973.8" y="597" width="4.8" height="15.0" fill="rgb(211,139,9)" rx="2" ry="2" />
<text  x="976.81" y="607.5" ></text>
</g>
<g >
<title>[perf-745.map] (21 samples, 0.02%)</title><rect x="12.7" y="229" width="0.3" height="15.0" fill="rgb(247,209,23)" rx="2" ry="2" />
<text  x="15.74" y="239.5" ></text>
</g>
<g >
<title>__GI_____strtod_l_internal (22 samples, 0.02%)</title><rect x="1125.8" y="581" width="0.3" height="15.0" fill="rgb(220,187,39)" rx="2" ry="2" />
<text  x="1128.83" y="591.5" ></text>
</g>
<g >
<title>SimpleMath::Dynamic::Matrix&lt;double&gt;::operator= (145 samples, 0.13%)</title><rect x="1056.9" y="581" width="1.5" height="15.0" fill="rgb(246,98,2)" rx="2" ry="2" />
<text  x="1059.95" y="591.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (15 samples, 0.01%)</title><rect x="1143.8" y="597" width="0.1" height="15.0" fill="rgb(242,206,51)" rx="2" ry="2" />
<text  x="1146.79" y="607.5" ></text>
</g>
<g >
<title>uv__work_done (167 samples, 0.14%)</title><rect x="11.5" y="485" width="1.7" height="15.0" fill="rgb(245,104,19)" rx="2" ry="2" />
<text  x="14.45" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_read (37 samples, 0.03%)</title><rect x="11.0" y="533" width="0.4" height="15.0" fill="rgb(249,130,9)" rx="2" ry="2" />
<text  x="14.04" y="543.5" ></text>
</g>
<g >
<title>unmap_page_range (35 samples, 0.03%)</title><rect x="14.1" y="405" width="0.4" height="15.0" fill="rgb(243,118,35)" rx="2" ry="2" />
<text  x="17.09" y="415.5" ></text>
</g>
<g >
<title>rest_init (13,159 samples, 11.42%)</title><rect x="760.3" y="517" width="134.7" height="15.0" fill="rgb(216,161,29)" rx="2" ry="2" />
<text  x="763.29" y="527.5" >rest_init</text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (1,775 samples, 1.54%)</title><rect x="1154.1" y="597" width="18.2" height="15.0" fill="rgb(235,215,49)" rx="2" ry="2" />
<text  x="1157.09" y="607.5" ></text>
</g>
<g >
<title>pthread_cond_wait@@GLIBC_2.3.2 (11 samples, 0.01%)</title><rect x="13.9" y="581" width="0.1" height="15.0" fill="rgb(222,201,26)" rx="2" ry="2" />
<text  x="16.88" y="591.5" ></text>
</g>
<g >
<title>Builtins_ArgumentsAdaptorTrampoline (37 samples, 0.03%)</title><rect x="12.7" y="277" width="0.4" height="15.0" fill="rgb(221,183,43)" rx="2" ry="2" />
<text  x="15.74" y="287.5" ></text>
</g>
<g >
<title>Builtins_AsyncFunctionAwaitRejectClosure (10 samples, 0.01%)</title><rect x="12.5" y="309" width="0.1" height="15.0" fill="rgb(251,129,30)" rx="2" ry="2" />
<text  x="15.47" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (46 samples, 0.04%)</title><rect x="14.0" y="581" width="0.5" height="15.0" fill="rgb(236,176,12)" rx="2" ry="2" />
<text  x="16.99" y="591.5" ></text>
</g>
<g >
<title>do_epoll_wait (13 samples, 0.01%)</title><rect x="13.7" y="517" width="0.2" height="15.0" fill="rgb(240,156,50)" rx="2" ry="2" />
<text  x="16.75" y="527.5" ></text>
</g>
<g >
<title>dup_mm (13 samples, 0.01%)</title><rect x="11.9" y="53" width="0.1" height="15.0" fill="rgb(231,109,52)" rx="2" ry="2" />
<text  x="14.87" y="63.5" ></text>
</g>
<g >
<title>Builtins_PromiseRejectReactionJob (11 samples, 0.01%)</title><rect x="12.5" y="325" width="0.1" height="15.0" fill="rgb(220,163,41)" rx="2" ry="2" />
<text  x="15.47" y="335.5" ></text>
</g>
<g >
<title>Builtins_CallApiCallback (13 samples, 0.01%)</title><rect x="11.9" y="197" width="0.1" height="15.0" fill="rgb(230,75,18)" rx="2" ry="2" />
<text  x="14.87" y="207.5" ></text>
</g>
<g >
<title>RigidBodyDynamics::ForwardDynamics (1,701 samples, 1.48%)</title><rect x="898.0" y="597" width="17.4" height="15.0" fill="rgb(222,89,12)" rx="2" ry="2" />
<text  x="900.98" y="607.5" ></text>
</g>
<g >
<title>mmput (45 samples, 0.04%)</title><rect x="14.0" y="469" width="0.5" height="15.0" fill="rgb(212,22,7)" rx="2" ry="2" />
<text  x="16.99" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;SimpleMath::Dynamic::Matrix&lt;double&gt;, std::allocator&lt;SimpleMath::Dynamic::Matrix&lt;double&gt; &gt; &gt;::operator[] (14 samples, 0.01%)</title><rect x="1126.8" y="549" width="0.1" height="15.0" fill="rgb(205,47,18)" rx="2" ry="2" />
<text  x="1129.80" y="559.5" ></text>
</g>
<g >
<title>uv__read (15 samples, 0.01%)</title><rect x="13.3" y="485" width="0.1" height="15.0" fill="rgb(206,86,12)" rx="2" ry="2" />
<text  x="16.26" y="495.5" ></text>
</g>
<g >
<title>SimpleMath::Block&lt;SimpleMath::Fixed::Matrix&lt;double, 6u, 6u&gt;, double&gt;::operator=&lt;SimpleMath::Fixed::Matrix&lt;double, 3u, 3u&gt; &gt; (977 samples, 0.85%)</title><rect x="1014.8" y="581" width="10.0" height="15.0" fill="rgb(252,184,8)" rx="2" ry="2" />
<text  x="1017.81" y="591.5" ></text>
</g>
<g >
<title>do_syscall_64 (38 samples, 0.03%)</title><rect x="11.0" y="549" width="0.4" height="15.0" fill="rgb(254,76,23)" rx="2" ry="2" />
<text  x="14.03" y="559.5" ></text>
</g>
<g >
<title>__libc_start_main (204 samples, 0.18%)</title><rect x="11.4" y="581" width="2.1" height="15.0" fill="rgb(206,126,9)" rx="2" ry="2" />
<text  x="14.42" y="591.5" ></text>
</g>
<g >
<title>__libc_read (38 samples, 0.03%)</title><rect x="11.0" y="581" width="0.4" height="15.0" fill="rgb(229,34,33)" rx="2" ry="2" />
<text  x="14.03" y="591.5" ></text>
</g>
<g >
<title>Builtins_PromiseFulfillReactionJob (47 samples, 0.04%)</title><rect x="12.7" y="357" width="0.5" height="15.0" fill="rgb(222,138,51)" rx="2" ry="2" />
<text  x="15.68" y="367.5" ></text>
</g>
<g >
<title>native_safe_halt (72,572 samples, 62.96%)</title><rect x="17.2" y="485" width="742.9" height="15.0" fill="rgb(210,30,23)" rx="2" ry="2" />
<text  x="20.21" y="495.5" >native_safe_halt</text>
</g>
<g >
<title>dbus-daemon (13 samples, 0.01%)</title><rect x="10.1" y="613" width="0.1" height="15.0" fill="rgb(221,176,43)" rx="2" ry="2" />
<text  x="13.07" y="623.5" ></text>
</g>
<g >
<title>uv_run (204 samples, 0.18%)</title><rect x="11.4" y="533" width="2.1" height="15.0" fill="rgb(232,211,11)" rx="2" ry="2" />
<text  x="14.42" y="543.5" ></text>
</g>
<g >
<title>Builtins_RunMicrotasks (47 samples, 0.04%)</title><rect x="12.7" y="373" width="0.5" height="15.0" fill="rgb(209,153,2)" rx="2" ry="2" />
<text  x="15.68" y="383.5" ></text>
</g>
<g >
<title>SimpleMath::Dynamic::Matrix&lt;double&gt;::~Matrix (117 samples, 0.10%)</title><rect x="1060.4" y="565" width="1.2" height="15.0" fill="rgb(238,199,42)" rx="2" ry="2" />
<text  x="1063.42" y="575.5" ></text>
</g>
<g >
<title>copy_page_range (11 samples, 0.01%)</title><rect x="11.9" y="37" width="0.1" height="15.0" fill="rgb(230,192,0)" rx="2" ry="2" />
<text  x="14.89" y="47.5" ></text>
</g>
<g >
<title>__do_execve_file.isra.39 (46 samples, 0.04%)</title><rect x="14.0" y="533" width="0.5" height="15.0" fill="rgb(220,95,27)" rx="2" ry="2" />
<text  x="16.99" y="543.5" ></text>
</g>
<g >
<title>copy_process (13 samples, 0.01%)</title><rect x="11.9" y="69" width="0.1" height="15.0" fill="rgb(221,182,17)" rx="2" ry="2" />
<text  x="14.87" y="79.5" ></text>
</g>
<g >
<title>v8::internal::CancelableTask::Run (27 samples, 0.02%)</title><rect x="15.0" y="565" width="0.3" height="15.0" fill="rgb(236,61,35)" rx="2" ry="2" />
<text  x="17.98" y="575.5" ></text>
</g>
<g >
<title>__lock_text_start (13 samples, 0.01%)</title><rect x="14.8" y="469" width="0.2" height="15.0" fill="rgb(250,205,40)" rx="2" ry="2" />
<text  x="17.83" y="479.5" ></text>
</g>
<g >
<title>arch_cpu_idle (72,575 samples, 62.96%)</title><rect x="17.2" y="517" width="742.9" height="15.0" fill="rgb(252,157,2)" rx="2" ry="2" />
<text  x="20.19" y="527.5" >arch_cpu_idle</text>
</g>
<g >
<title>SimpleMath::Dynamic::Matrix&lt;double&gt;::Matrix&lt;SimpleMath::Dynamic::Matrix&lt;double&gt; &gt; (14 samples, 0.01%)</title><rect x="1153.1" y="581" width="0.2" height="15.0" fill="rgb(236,63,48)" rx="2" ry="2" />
<text  x="1156.15" y="591.5" ></text>
</g>
<g >
<title>_IO_vsscanf (12 samples, 0.01%)</title><rect x="15.5" y="581" width="0.1" height="15.0" fill="rgb(252,96,24)" rx="2" ry="2" />
<text  x="18.46" y="591.5" ></text>
</g>
<g >
<title>RigidBodyDynamics::jcalc_X_lambda_S (614 samples, 0.53%)</title><rect x="1002.9" y="581" width="6.3" height="15.0" fill="rgb(227,104,10)" rx="2" ry="2" />
<text  x="1005.91" y="591.5" ></text>
</g>
<g >
<title>node::fs::AfterStringPtr (29 samples, 0.03%)</title><rect x="12.4" y="469" width="0.3" height="15.0" fill="rgb(228,142,3)" rx="2" ry="2" />
<text  x="15.37" y="479.5" ></text>
</g>
<g >
<title>grep (35 samples, 0.03%)</title><rect x="10.2" y="613" width="0.4" height="15.0" fill="rgb(237,218,34)" rx="2" ry="2" />
<text  x="13.20" y="623.5" ></text>
</g>
<g >
<title>Builtins_JSRunMicrotasksEntry (11 samples, 0.01%)</title><rect x="12.5" y="357" width="0.1" height="15.0" fill="rgb(217,143,8)" rx="2" ry="2" />
<text  x="15.47" y="367.5" ></text>
</g>
<g >
<title>SimpleMath::Fixed::Matrix&lt;double, 3u, 3u&gt;::Matrix (11 samples, 0.01%)</title><rect x="1059.6" y="581" width="0.1" height="15.0" fill="rgb(249,185,27)" rx="2" ry="2" />
<text  x="1062.59" y="591.5" ></text>
</g>
<g >
<title>RigidBodyDynamics::Math::SpatialRigidBodyInertia::toMatrix (59 samples, 0.05%)</title><rect x="998.7" y="581" width="0.6" height="15.0" fill="rgb(225,153,37)" rx="2" ry="2" />
<text  x="1001.73" y="591.5" ></text>
</g>
<g >
<title>tcp_seq_start (14 samples, 0.01%)</title><rect x="11.3" y="437" width="0.1" height="15.0" fill="rgb(249,171,13)" rx="2" ry="2" />
<text  x="14.28" y="447.5" ></text>
</g>
<g >
<title>native_safe_halt (13,151 samples, 11.41%)</title><rect x="760.3" y="421" width="134.6" height="15.0" fill="rgb(238,19,10)" rx="2" ry="2" />
<text  x="763.29" y="431.5" >native_safe_halt</text>
</g>
<g >
<title>node::EmitToJSStreamListener::OnStreamRead (14 samples, 0.01%)</title><rect x="13.3" y="453" width="0.1" height="15.0" fill="rgb(238,76,44)" rx="2" ry="2" />
<text  x="16.27" y="463.5" ></text>
</g>
<g >
<title>SimpleMath::Block&lt;SimpleMath::Dynamic::Matrix&lt;double&gt;, double&gt;::operator=&lt;SimpleMath::Dynamic::Matrix&lt;double&gt; &gt; (400 samples, 0.35%)</title><rect x="1009.3" y="581" width="4.1" height="15.0" fill="rgb(240,172,17)" rx="2" ry="2" />
<text  x="1012.27" y="591.5" ></text>
</g>
<g >
<title>node::AsyncWrap::MakeCallback (14 samples, 0.01%)</title><rect x="13.3" y="421" width="0.1" height="15.0" fill="rgb(220,135,25)" rx="2" ry="2" />
<text  x="16.27" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (38 samples, 0.03%)</title><rect x="11.0" y="565" width="0.4" height="15.0" fill="rgb(214,69,37)" rx="2" ry="2" />
<text  x="14.03" y="575.5" ></text>
</g>
<g >
<title>operator&gt;&gt; (27 samples, 0.02%)</title><rect x="1126.5" y="549" width="0.3" height="15.0" fill="rgb(227,111,41)" rx="2" ry="2" />
<text  x="1129.52" y="559.5" ></text>
</g>
<g >
<title>[perf-745.map] (10 samples, 0.01%)</title><rect x="12.5" y="293" width="0.1" height="15.0" fill="rgb(238,221,42)" rx="2" ry="2" />
<text  x="15.47" y="303.5" ></text>
</g>
<g >
<title>irq_exit (19 samples, 0.02%)</title><rect x="759.9" y="437" width="0.2" height="15.0" fill="rgb(231,20,39)" rx="2" ry="2" />
<text  x="762.93" y="447.5" ></text>
</g>
<g >
<title>Builtins_AsyncFunctionAwaitResolveClosure (71 samples, 0.06%)</title><rect x="11.6" y="325" width="0.8" height="15.0" fill="rgb(212,77,25)" rx="2" ry="2" />
<text  x="14.63" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (18 samples, 0.02%)</title><rect x="12.7" y="133" width="0.2" height="15.0" fill="rgb(221,164,17)" rx="2" ry="2" />
<text  x="15.74" y="143.5" ></text>
</g>
<g >
<title>_IO_vfscanf (11 samples, 0.01%)</title><rect x="15.5" y="565" width="0.1" height="15.0" fill="rgb(224,140,31)" rx="2" ry="2" />
<text  x="18.47" y="575.5" ></text>
</g>
<g >
<title>epoll_wait (15 samples, 0.01%)</title><rect x="13.7" y="581" width="0.2" height="15.0" fill="rgb(248,13,41)" rx="2" ry="2" />
<text  x="16.73" y="591.5" ></text>
</g>
<g >
<title>seq_read (24 samples, 0.02%)</title><rect x="16.5" y="485" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="19.46" y="495.5" ></text>
</g>
<g >
<title>[perf-745.map] (27 samples, 0.02%)</title><rect x="11.9" y="245" width="0.2" height="15.0" fill="rgb(211,188,41)" rx="2" ry="2" />
<text  x="14.87" y="255.5" ></text>
</g>
<g >
<title>_do_fork (18 samples, 0.02%)</title><rect x="12.7" y="101" width="0.2" height="15.0" fill="rgb(231,216,18)" rx="2" ry="2" />
<text  x="15.74" y="111.5" ></text>
</g>
<g >
<title>__sched_text_end (13,151 samples, 11.41%)</title><rect x="760.3" y="437" width="134.6" height="15.0" fill="rgb(248,191,43)" rx="2" ry="2" />
<text  x="763.29" y="447.5" >__sched_text_end</text>
</g>
<g >
<title>proc_pid_status (13 samples, 0.01%)</title><rect x="16.5" y="453" width="0.1" height="15.0" fill="rgb(237,213,34)" rx="2" ry="2" />
<text  x="19.48" y="463.5" ></text>
</g>
<g >
<title>RigidBodyDynamics::CompositeRigidBodyAlgorithm (291 samples, 0.25%)</title><rect x="895.0" y="597" width="3.0" height="15.0" fill="rgb(246,33,53)" rx="2" ry="2" />
<text  x="898.00" y="607.5" ></text>
</g>
<g >
<title>free@plt (27 samples, 0.02%)</title><rect x="1042.0" y="565" width="0.3" height="15.0" fill="rgb(252,1,21)" rx="2" ry="2" />
<text  x="1045.01" y="575.5" ></text>
</g>
<g >
<title>main (73 samples, 0.06%)</title><rect x="1126.3" y="565" width="0.7" height="15.0" fill="rgb(209,25,53)" rx="2" ry="2" />
<text  x="1129.25" y="575.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::ProcessWrap::Spawn (13 samples, 0.01%)</title><rect x="11.9" y="181" width="0.1" height="15.0" fill="rgb(234,114,18)" rx="2" ry="2" />
<text  x="14.87" y="191.5" ></text>
</g>
<g >
<title>unmap_vmas (36 samples, 0.03%)</title><rect x="14.1" y="437" width="0.4" height="15.0" fill="rgb(252,208,51)" rx="2" ry="2" />
<text  x="17.08" y="447.5" ></text>
</g>
<g >
<title>RigidBodyDynamics::Math::SpatialTransform::operator* (490 samples, 0.43%)</title><rect x="942.8" y="597" width="5.0" height="15.0" fill="rgb(235,225,35)" rx="2" ry="2" />
<text  x="945.83" y="607.5" ></text>
</g>
<g >
<title>established_get_first.isra.39 (12 samples, 0.01%)</title><rect x="11.1" y="421" width="0.1" height="15.0" fill="rgb(210,201,45)" rx="2" ry="2" />
<text  x="14.07" y="431.5" ></text>
</g>
<g >
<title>read (27 samples, 0.02%)</title><rect x="16.4" y="597" width="0.3" height="15.0" fill="rgb(212,13,21)" rx="2" ry="2" />
<text  x="19.44" y="607.5" ></text>
</g>
<g >
<title>[unknown] (19 samples, 0.02%)</title><rect x="16.8" y="597" width="0.2" height="15.0" fill="rgb(223,101,7)" rx="2" ry="2" />
<text  x="19.81" y="607.5" ></text>
</g>
<g >
<title>futex_wake (17 samples, 0.01%)</title><rect x="14.8" y="517" width="0.2" height="15.0" fill="rgb(246,158,13)" rx="2" ry="2" />
<text  x="17.79" y="527.5" ></text>
</g>
<g >
<title>Builtins_InterpreterEntryTrampoline (27 samples, 0.02%)</title><rect x="11.9" y="277" width="0.2" height="15.0" fill="rgb(248,125,7)" rx="2" ry="2" />
<text  x="14.87" y="287.5" ></text>
</g>
<g >
<title>tcp_get_idx (14 samples, 0.01%)</title><rect x="11.3" y="421" width="0.1" height="15.0" fill="rgb(209,227,32)" rx="2" ry="2" />
<text  x="14.28" y="431.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (19 samples, 0.02%)</title><rect x="759.9" y="453" width="0.2" height="15.0" fill="rgb(219,30,36)" rx="2" ry="2" />
<text  x="762.93" y="463.5" ></text>
</g>
<g >
<title>copy_process (13 samples, 0.01%)</title><rect x="13.0" y="85" width="0.1" height="15.0" fill="rgb(236,47,44)" rx="2" ry="2" />
<text  x="15.96" y="95.5" ></text>
</g>
<g >
<title>Builtins_InterpreterEntryTrampoline (37 samples, 0.03%)</title><rect x="12.7" y="293" width="0.4" height="15.0" fill="rgb(217,77,20)" rx="2" ry="2" />
<text  x="15.74" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (18 samples, 0.02%)</title><rect x="14.8" y="565" width="0.2" height="15.0" fill="rgb(224,141,4)" rx="2" ry="2" />
<text  x="17.78" y="575.5" ></text>
</g>
<g >
<title>do_syscall_64 (10 samples, 0.01%)</title><rect x="12.0" y="117" width="0.1" height="15.0" fill="rgb(247,112,17)" rx="2" ry="2" />
<text  x="15.04" y="127.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.02%)</title><rect x="13.5" y="565" width="0.2" height="15.0" fill="rgb(233,6,50)" rx="2" ry="2" />
<text  x="16.52" y="575.5" ></text>
</g>
<g >
<title>cpu_startup_entry (72,591 samples, 62.98%)</title><rect x="17.2" y="565" width="743.1" height="15.0" fill="rgb(224,75,27)" rx="2" ry="2" />
<text  x="20.18" y="575.5" >cpu_startup_entry</text>
</g>
<g >
<title>uv__io_poll (193 samples, 0.17%)</title><rect x="11.4" y="517" width="2.0" height="15.0" fill="rgb(227,90,27)" rx="2" ry="2" />
<text  x="14.43" y="527.5" ></text>
</g>
<g >
<title>uv__stream_io (15 samples, 0.01%)</title><rect x="13.3" y="501" width="0.1" height="15.0" fill="rgb(224,211,0)" rx="2" ry="2" />
<text  x="16.26" y="511.5" ></text>
</g>
<g >
<title>uv_spawn (13 samples, 0.01%)</title><rect x="11.9" y="165" width="0.1" height="15.0" fill="rgb(211,113,52)" rx="2" ry="2" />
<text  x="14.87" y="175.5" ></text>
</g>
<g >
<title>[perf-745.map] (16 samples, 0.01%)</title><rect x="13.0" y="229" width="0.1" height="15.0" fill="rgb(211,160,45)" rx="2" ry="2" />
<text  x="15.96" y="239.5" ></text>
</g>
<g >
<title>do_syscall_64 (26 samples, 0.02%)</title><rect x="16.4" y="565" width="0.3" height="15.0" fill="rgb(215,71,42)" rx="2" ry="2" />
<text  x="19.45" y="575.5" ></text>
</g>
<g >
<title>SimpleMath::Block&lt;SimpleMath::Dynamic::Matrix&lt;double&gt;, double&gt;::operator= (27 samples, 0.02%)</title><rect x="955.1" y="597" width="0.3" height="15.0" fill="rgb(219,98,41)" rx="2" ry="2" />
<text  x="958.11" y="607.5" ></text>
</g>
<g >
<title>operator delete[] (18 samples, 0.02%)</title><rect x="1138.0" y="581" width="0.1" height="15.0" fill="rgb(228,57,31)" rx="2" ry="2" />
<text  x="1140.96" y="591.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (11 samples, 0.01%)</title><rect x="1126.6" y="501" width="0.1" height="15.0" fill="rgb(214,171,4)" rx="2" ry="2" />
<text  x="1129.63" y="511.5" ></text>
</g>
<g >
<title>_do_fork (13 samples, 0.01%)</title><rect x="11.9" y="85" width="0.1" height="15.0" fill="rgb(205,39,35)" rx="2" ry="2" />
<text  x="14.87" y="95.5" ></text>
</g>
<g >
<title>uv__async_io (169 samples, 0.15%)</title><rect x="11.4" y="501" width="1.8" height="15.0" fill="rgb(248,55,42)" rx="2" ry="2" />
<text  x="14.43" y="511.5" ></text>
</g>
<g >
<title>Builtins_AsyncFunctionAwaitResolveClosure (47 samples, 0.04%)</title><rect x="12.7" y="341" width="0.5" height="15.0" fill="rgb(252,228,10)" rx="2" ry="2" />
<text  x="15.68" y="351.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (13,159 samples, 11.42%)</title><rect x="760.3" y="581" width="134.7" height="15.0" fill="rgb(214,23,7)" rx="2" ry="2" />
<text  x="763.29" y="591.5" >x86_64_start_kernel</text>
</g>
<g >
<title>Builtins_InterpreterEntryTrampoline (39 samples, 0.03%)</title><rect x="11.8" y="293" width="0.4" height="15.0" fill="rgb(248,80,49)" rx="2" ry="2" />
<text  x="14.80" y="303.5" ></text>
</g>
<g >
<title>operator delete[]@plt (44 samples, 0.04%)</title><rect x="1188.9" y="597" width="0.4" height="15.0" fill="rgb(228,11,40)" rx="2" ry="2" />
<text  x="1191.88" y="607.5" ></text>
</g>
<g >
<title>RigidBodyDynamics::jcalc (39 samples, 0.03%)</title><rect x="953.5" y="597" width="0.4" height="15.0" fill="rgb(235,138,2)" rx="2" ry="2" />
<text  x="956.46" y="607.5" ></text>
</g>
<g >
<title>Builtins_RunMicrotasks (71 samples, 0.06%)</title><rect x="11.6" y="357" width="0.8" height="15.0" fill="rgb(239,7,51)" rx="2" ry="2" />
<text  x="14.63" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (46 samples, 0.04%)</title><rect x="14.0" y="565" width="0.5" height="15.0" fill="rgb(242,89,42)" rx="2" ry="2" />
<text  x="16.99" y="575.5" ></text>
</g>
<g >
<title>SimpleMath::Fixed::Matrix&lt;double, 3u, 3u&gt;::inverse (251 samples, 0.22%)</title><rect x="1059.7" y="581" width="2.6" height="15.0" fill="rgb(246,192,10)" rx="2" ry="2" />
<text  x="1062.70" y="591.5" ></text>
</g>
<g >
<title>node::InternalCallbackScope::~InternalCallbackScope (47 samples, 0.04%)</title><rect x="12.7" y="453" width="0.5" height="15.0" fill="rgb(252,187,2)" rx="2" ry="2" />
<text  x="15.68" y="463.5" ></text>
</g>
<g >
<title>all (115,268 samples, 100%)</title><rect x="10.0" y="629" width="1180.0" height="15.0" fill="rgb(217,127,27)" rx="2" ry="2" />
<text  x="13.00" y="639.5" ></text>
</g>
<g >
<title>__x64_sys_read (26 samples, 0.02%)</title><rect x="16.4" y="549" width="0.3" height="15.0" fill="rgb(238,49,27)" rx="2" ry="2" />
<text  x="19.45" y="559.5" ></text>
</g>
<g >
<title>copy_process (10 samples, 0.01%)</title><rect x="12.0" y="69" width="0.1" height="15.0" fill="rgb(225,164,23)" rx="2" ry="2" />
<text  x="15.04" y="79.5" ></text>
</g>
<g >
<title>SimpleMath::Dynamic::Matrix&lt;double&gt;::~Matrix (25 samples, 0.02%)</title><rect x="978.2" y="581" width="0.2" height="15.0" fill="rgb(253,5,26)" rx="2" ry="2" />
<text  x="981.16" y="591.5" ></text>
</g>
<g >
<title>RigidBodyDynamics::jcalc_X_lambda_S (120 samples, 0.10%)</title><rect x="953.9" y="597" width="1.2" height="15.0" fill="rgb(243,38,53)" rx="2" ry="2" />
<text  x="956.88" y="607.5" ></text>
</g>
<g >
<title>malloc (50 samples, 0.04%)</title><rect x="1124.7" y="565" width="0.5" height="15.0" fill="rgb(218,209,48)" rx="2" ry="2" />
<text  x="1127.68" y="575.5" ></text>
</g>
<g >
<title>Builtins_RunMicrotasks (11 samples, 0.01%)</title><rect x="12.5" y="341" width="0.1" height="15.0" fill="rgb(213,5,28)" rx="2" ry="2" />
<text  x="15.47" y="351.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (150 samples, 0.13%)</title><rect x="1128.2" y="581" width="1.5" height="15.0" fill="rgb(213,202,28)" rx="2" ry="2" />
<text  x="1131.19" y="591.5" ></text>
</g>
<g >
<title>malloc (637 samples, 0.55%)</title><rect x="1129.9" y="581" width="6.5" height="15.0" fill="rgb(207,64,35)" rx="2" ry="2" />
<text  x="1132.92" y="591.5" ></text>
</g>
<g >
<title>default_idle_call (13,151 samples, 11.41%)</title><rect x="760.3" y="469" width="134.6" height="15.0" fill="rgb(244,199,52)" rx="2" ry="2" />
<text  x="763.29" y="479.5" >default_idle_call</text>
</g>
<g >
<title>SimpleMath::Dynamic::Matrix&lt;double&gt;::Matrix&lt;SimpleMath::Dynamic::Matrix&lt;double&gt; &gt; (72 samples, 0.06%)</title><rect x="1043.2" y="581" width="0.8" height="15.0" fill="rgb(213,227,37)" rx="2" ry="2" />
<text  x="1046.22" y="591.5" ></text>
</g>
<g >
<title>RigidBodyDynamics::CompositeRigidBodyAlgorithm (548 samples, 0.48%)</title><rect x="1101.1" y="565" width="5.6" height="15.0" fill="rgb(205,208,53)" rx="2" ry="2" />
<text  x="1104.10" y="575.5" ></text>
</g>
<g >
<title>[perf-745.map] (71 samples, 0.06%)</title><rect x="11.6" y="309" width="0.8" height="15.0" fill="rgb(226,150,33)" rx="2" ry="2" />
<text  x="14.63" y="319.5" ></text>
</g>
<g >
<title>wake_up_q (14 samples, 0.01%)</title><rect x="14.8" y="501" width="0.2" height="15.0" fill="rgb(229,177,0)" rx="2" ry="2" />
<text  x="17.82" y="511.5" ></text>
</g>
<g >
<title>[perf-745.map] (16 samples, 0.01%)</title><rect x="13.0" y="245" width="0.1" height="15.0" fill="rgb(209,115,32)" rx="2" ry="2" />
<text  x="15.96" y="255.5" ></text>
</g>
<g >
<title>operator new (24 samples, 0.02%)</title><rect x="1125.4" y="565" width="0.2" height="15.0" fill="rgb(237,181,53)" rx="2" ry="2" />
<text  x="1128.36" y="575.5" ></text>
</g>
<g >
<title>SimpleMath::Dynamic::Matrix&lt;double&gt;::Matrix&lt;SimpleMath::Dynamic::Matrix&lt;double&gt; &gt; (258 samples, 0.22%)</title><rect x="971.1" y="597" width="2.6" height="15.0" fill="rgb(205,179,40)" rx="2" ry="2" />
<text  x="974.09" y="607.5" ></text>
</g>
<g >
<title>flush_old_exec (46 samples, 0.04%)</title><rect x="14.0" y="485" width="0.5" height="15.0" fill="rgb(252,127,43)" rx="2" ry="2" />
<text  x="16.99" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_write (20 samples, 0.02%)</title><rect x="13.5" y="533" width="0.2" height="15.0" fill="rgb(209,62,32)" rx="2" ry="2" />
<text  x="16.52" y="543.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.01%)</title><rect x="12.0" y="133" width="0.1" height="15.0" fill="rgb(239,59,27)" rx="2" ry="2" />
<text  x="15.04" y="143.5" ></text>
</g>
<g >
<title>RigidBodyDynamics::jcalc (1,412 samples, 1.22%)</title><rect x="1109.4" y="565" width="14.5" height="15.0" fill="rgb(211,127,6)" rx="2" ry="2" />
<text  x="1112.42" y="575.5" ></text>
</g>
<g >
<title>operator delete@plt (49 samples, 0.04%)</title><rect x="1187.7" y="597" width="0.5" height="15.0" fill="rgb(213,120,26)" rx="2" ry="2" />
<text  x="1190.73" y="607.5" ></text>
</g>
<g >
<title>uv_spawn (18 samples, 0.02%)</title><rect x="12.7" y="181" width="0.2" height="15.0" fill="rgb(212,59,50)" rx="2" ry="2" />
<text  x="15.74" y="191.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (17 samples, 0.01%)</title><rect x="978.4" y="581" width="0.2" height="15.0" fill="rgb(253,69,14)" rx="2" ry="2" />
<text  x="981.41" y="591.5" ></text>
</g>
<g >
<title>v8::internal::MicrotaskQueue::RunMicrotasks (74 samples, 0.06%)</title><rect x="11.6" y="421" width="0.8" height="15.0" fill="rgb(238,157,18)" rx="2" ry="2" />
<text  x="14.61" y="431.5" ></text>
</g>
<g >
<title>node::fs::FSReqAfterScope::Reject (22 samples, 0.02%)</title><rect x="12.4" y="453" width="0.2" height="15.0" fill="rgb(221,19,19)" rx="2" ry="2" />
<text  x="15.39" y="463.5" ></text>
</g>
<g >
<title>SimpleMath::Block&lt;SimpleMath::Fixed::Matrix&lt;double, 6u, 6u&gt;, double&gt;::operator=&lt;SimpleMath::Fixed::Matrix&lt;double, 3u, 3u&gt; &gt;@plt (13 samples, 0.01%)</title><rect x="970.9" y="597" width="0.1" height="15.0" fill="rgb(252,115,6)" rx="2" ry="2" />
<text  x="973.86" y="607.5" ></text>
</g>
<g >
<title>do_syscall_64 (20 samples, 0.02%)</title><rect x="13.5" y="549" width="0.2" height="15.0" fill="rgb(212,201,31)" rx="2" ry="2" />
<text  x="16.52" y="559.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.01%)</title><rect x="11.9" y="133" width="0.1" height="15.0" fill="rgb(237,58,52)" rx="2" ry="2" />
<text  x="14.87" y="143.5" ></text>
</g>
<g >
<title>__GI___libc_open (14 samples, 0.01%)</title><rect x="15.6" y="581" width="0.1" height="15.0" fill="rgb(234,82,6)" rx="2" ry="2" />
<text  x="18.58" y="591.5" ></text>
</g>
<g >
<title>RigidBodyDynamics::InverseDynamics (892 samples, 0.77%)</title><rect x="915.4" y="597" width="9.1" height="15.0" fill="rgb(243,161,52)" rx="2" ry="2" />
<text  x="918.39" y="607.5" ></text>
</g>
<g >
<title>[unknown] (294 samples, 0.26%)</title><rect x="11.0" y="597" width="3.0" height="15.0" fill="rgb(246,90,51)" rx="2" ry="2" />
<text  x="13.98" y="607.5" ></text>
</g>
<g >
<title>__vfs_read (37 samples, 0.03%)</title><rect x="11.0" y="485" width="0.4" height="15.0" fill="rgb(237,3,8)" rx="2" ry="2" />
<text  x="14.04" y="495.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::ProcessWrap::Spawn (13 samples, 0.01%)</title><rect x="13.0" y="197" width="0.1" height="15.0" fill="rgb(247,68,28)" rx="2" ry="2" />
<text  x="15.96" y="207.5" ></text>
</g>
<g >
<title>[unknown] (16,053 samples, 13.93%)</title><rect x="978.6" y="597" width="164.4" height="15.0" fill="rgb(227,132,29)" rx="2" ry="2" />
<text  x="981.65" y="607.5" >[unknown]</text>
</g>
<g >
<title>Builtins_InterpreterEntryTrampoline (14 samples, 0.01%)</title><rect x="11.9" y="229" width="0.1" height="15.0" fill="rgb(234,95,38)" rx="2" ry="2" />
<text  x="14.87" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (13 samples, 0.01%)</title><rect x="13.7" y="533" width="0.2" height="15.0" fill="rgb(253,56,40)" rx="2" ry="2" />
<text  x="16.75" y="543.5" ></text>
</g>
<g >
<title>[perf-745.map] (12 samples, 0.01%)</title><rect x="12.0" y="229" width="0.1" height="15.0" fill="rgb(251,34,30)" rx="2" ry="2" />
<text  x="15.03" y="239.5" ></text>
</g>
<g >
<title>operator delete[] (64 samples, 0.06%)</title><rect x="1188.2" y="597" width="0.7" height="15.0" fill="rgb(210,181,52)" rx="2" ry="2" />
<text  x="1191.23" y="607.5" ></text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::Invoke (47 samples, 0.04%)</title><rect x="12.7" y="405" width="0.5" height="15.0" fill="rgb(235,223,35)" rx="2" ry="2" />
<text  x="15.68" y="415.5" ></text>
</g>
<g >
<title>Builtins_JSRunMicrotasksEntry (47 samples, 0.04%)</title><rect x="12.7" y="389" width="0.5" height="15.0" fill="rgb(233,68,43)" rx="2" ry="2" />
<text  x="15.68" y="399.5" ></text>
</g>
<g >
<title>RigidBodyDynamics::Math::SpatialTransform::toMatrixTranspose (545 samples, 0.47%)</title><rect x="947.9" y="597" width="5.6" height="15.0" fill="rgb(249,216,14)" rx="2" ry="2" />
<text  x="950.88" y="607.5" ></text>
</g>
<g >
<title>ps (133 samples, 0.12%)</title><rect x="15.4" y="613" width="1.3" height="15.0" fill="rgb(243,160,49)" rx="2" ry="2" />
<text  x="18.37" y="623.5" ></text>
</g>
<g >
<title>dup_mm (10 samples, 0.01%)</title><rect x="12.0" y="53" width="0.1" height="15.0" fill="rgb(237,227,27)" rx="2" ry="2" />
<text  x="15.04" y="63.5" ></text>
</g>
<g >
<title>Builtins_CallApiCallback (18 samples, 0.02%)</title><rect x="12.7" y="213" width="0.2" height="15.0" fill="rgb(220,106,14)" rx="2" ry="2" />
<text  x="15.74" y="223.5" ></text>
</g>
<g >
<title>worker (12 samples, 0.01%)</title><rect x="15.3" y="581" width="0.1" height="15.0" fill="rgb(233,79,23)" rx="2" ry="2" />
<text  x="18.25" y="591.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::ProcessWrap::Spawn (18 samples, 0.02%)</title><rect x="12.7" y="197" width="0.2" height="15.0" fill="rgb(239,103,46)" rx="2" ry="2" />
<text  x="15.74" y="207.5" ></text>
</g>
<g >
<title>ksys_read (37 samples, 0.03%)</title><rect x="11.0" y="517" width="0.4" height="15.0" fill="rgb(245,39,6)" rx="2" ry="2" />
<text  x="14.04" y="527.5" ></text>
</g>
<g >
<title>ls (39 samples, 0.03%)</title><rect x="10.6" y="613" width="0.4" height="15.0" fill="rgb(245,116,20)" rx="2" ry="2" />
<text  x="13.58" y="623.5" ></text>
</g>
</g>
</svg>
